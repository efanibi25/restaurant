{"version":3,"sources":["Component/Numeric.js","Pages/Waitlist.js","Component/Phone.js","Pages/Customers.js","Pages/DiningTables.js","Pages/Waiters.js","Pages/Visits.js","Pages/Home.js","Component/Drawer.js","Component/Menubar.js","App.js","index.js"],"names":["NumericField","props","onChange","onKeyPress","max","Number","MAX_SAFE_INTEGER","min","onInput","TextField","type","inputProps","event","console","log","which","preventDefault","alert","value","parseInt","target","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","color","indeterminate","checked","map","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","Box","component","sx","visuallyHidden","EnhancedTableToolbar","rows","selected","setRows","setSelected","Toolbar","className","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","Typography","display","alignItems","variant","Tooltip","title","IconButton","filter","curr","includes","queue_id","DiningTables","React","setOrder","setOrderBy","page","setPage","dense","rowsPerPage","setRowsPerPage","items","setItems","customerNames","setCustomersNames","Date","local","setLocal","loaded","setLoaded","loadRef","customer_id","setcustomer_id","time","setTime","seated","setSeated","num_seat","setNum_seat","request","setRequests","getItems","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","emptyRows","Math","length","get_Data","fetch","data","json","error","data2","current","getTime","width","Paper","mb","TableContainer","Table","minWidth","size","newSelecteds","n","TableBody","row","name","isItemSelected","indexOf","labelId","hoverT","selectedIndex","newSelected","concat","handleClick","role","tabIndex","scope","reserved_time","toLocaleTimeString","hour","minute","requested_feature_id","is_seated","fontSize","method","headers","body","JSON","stringify","post","output","postData","Autocomplete","disablePortal","newValue","isOptionEqualToValue","option","options","item","customer_name","renderInput","params","Numeric","LocalizationProvider","dateAdapter","DateAdapter","TimePicker","FormControl","fullWidth","InputLabel","Select","MenuItem","style","height","colSpan","LinearProgress","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","PhoneField","maxLength","CustomerTables","setName","phone","setPhone","isSelected","customer_phone","Phone","inputMode","table_id","setSeats","feature_id","waiter_id","waiter_name","loadedRef","customersNames","waitersNames","setWaitersNames","UTCStart","setUTCStart","UTCEnd","setUTCEnd","tablesList","setTablesList","numGuest","setNumGuest","startTime","setStartTime","endTime","setEndTime","customerID","setCustomerID","waiterID","setWaiterID","check","setCheck","tip","setTips","tableID","setTable","data3","data4","visit_id","num_guest","time_start","time_stop","check_amount","toFixed","tips_amount","toString","currencySymbol","minimumValue","outputFormat","decimalCharacter","digitGroupSeparator","decimalPlaces","Home","useStyles","makeStyles","link","textDecoration","icon","DrawerComponent","useState","openDrawer","setOpenDrawer","Drawer","open","onClose","List","ListItem","ListItemText","to","navlinks","marginLeft","spacing","logo","flexGrow","cursor","MenuBar","classes","useTheme","isMobile","useMediaQuery","breakpoints","down","AppBar","position","CssBaseline","App","Menubar","exact","path","Waitlist","Customers","Waiters","Visits","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8e07e57.chunk.js","sourcesContent":["import React from \"react\";\nimport { getDialogActionsUtilityClass, TextField } from \"@mui/material\";\n\nfunction NumericField(props) {\n    const{\n    onChange,\n    onKeyPress,\n    max=Number.MAX_SAFE_INTEGER,\n    min=0,\n    onInput\n    }=props\n \n    \n    // let onKeyPress=props.onKeypress||function(){}\n    // let onInput=props.onInput||function(){}\n    // let max=props.max||Number.MAX_SAFE_INTEGER \n    // let min=props.min||0\n    //handle inproper values \n    const handleKeyPress= (event) => {\n    console.log(event.which)\n    if(event.which != 8 && event.which != 13 && event.which != 0 && !(event.which >= 48 && event.which <= 57)){\n    event.preventDefault()\n    alert(\"Invalid input:Please Enter A number\")\n    }\n      };\n\n      const handleInput= (event) => {\n        let value=parseInt(event.target.value)\n        if (value!==value){\n            return\n        }\n        if(value<min){\n        alert(`Out of Range:${min}-${max}`)\n        event.target.value=min\n        return\n        }\n\n        if(value>max){\n            alert(\"Out of Range\")\n            event.target.value=max\n            return\n            }\n          };\n      \n      \n      \n\n    return (\n<TextField type=\"number\" inputProps={{ onKeyPress: handleKeyPress,onInput:handleInput }} onChange={onChange} max={max} min={min}></TextField>\n    );\n}\n\nexport default NumericField;\n","\nimport * as React from \"react\";\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\nimport { Select } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { InputLabel } from \"@mui/material\";\nimport { FormControl } from \"@mui/material\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TimePicker from '@mui/lab/TimePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateAdapter from '@mui/lab/AdapterDateFns';\nimport LinearProgress from '@mui/material/LinearProgress';\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n//[{ \"queue_id\": 1, \"customer_id\": 1, \"numberseat\": 8, \"time\": \"8:30pm\", \"request\": \"null\", \"seated\": \"false\" }]\nconst headCells = [\n  {\n    id: \"queue_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Queue Number\"\n  },\n  {\n    id: \"customer_id\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Customer Number\"\n  },\n  {\n    id: \" num_seat\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Total Seats\"\n  },\n  {\n    id: \"rserved_time\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Reserve Time\"\n  },\n  {\n    id: \"requested_feature_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Request ID\"\n  },\n  {\n    id: \"seated\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Seated ?\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const {\n    numSelected,\n    rows,\n    selected,\n    setRows,\n    setSelected\n  } = props;\n  const handleDelete = (event) => {\n    let filter=rows.filter((curr)=>{\n      if(!selected.includes(curr.queue_id)){\n        return true\n      }\n    }\n    )\n    setRows(filter)\n    setSelected([])\n  };\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n         <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n          <div>\n          {numSelected==1 &&<Tooltip title=\"Edit\">\n            <IconButton>\n            <EditIcon />\n            </IconButton>\n          </Tooltip>}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n       </Fragment>\n      ) : (\n        <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h4\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Waitlist\n        </Typography>\n          <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [customerNames, setCustomersNames] = React.useState([]);\n  const [local, setLocal] = React.useState(new Date());\n  const [loaded, setLoaded] = React.useState(false);\n  const loadRef=React.useRef(false)\n\n\n  //insert values\n  const [customer_id, setcustomer_id] = React.useState(0);\n  const [time, setTime] = React.useState(\"\");\n  const [seated, setSeated] = React.useState(\"\");\n  const [ num_seat, setNum_seat] = React.useState(0);\n  const [request, setRequests] = React.useState(\"\");\n  \n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.queue_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n\n  const handleCustomers= (event,newValue) => {\n   setcustomer_id(newValue.id)\n  };\n\n  const handleSeatsCount= (event) => {\n    setNum_seat(event.target.value)\n   };\n\n   const handleTime= (newValue) => {\n    setLocal(newValue)\n   };\n\n   const handleRequests= (event) => {\n    setRequests(event.target.value)\n   };\n\n   const handleSeated= (event) => {\n    setSeated(event.target.value)\n   };\n\n   const handleSubmit= (event) => {\n    console.log(seated,customer_id,time,request, num_seat,\"we need to submit this to db\")\n    async function postData(){\n      let post= await fetch(\n        \"/api/add_waitinglist\",{\n          method:'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body:JSON.stringify({\n            is_seated:seated===\"True\",\n            customer_id:customer_id,\n            reserved_time:time,\n            requested_feature_id:request,\n            num_seat:num_seat\n\n            })\n        })\n        post=await post.json()\n        console.log(\"Customer Insert\",post)\n        if (post.output==true){\n          get_Data()\n        }\n\n    }\n    postData()\n   \n    }\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    async function get_Data(){\n      let data=await fetch(\"/api/get_waitlist\")\n      data=await data.json()\n      console.log(data)\n      if(!data.error){\n        setRows(data)\n      }\n    \n\n      let data2=await fetch(\"/api/get_customers\") \n      data2= await data2.json()\n      if(!data2.error){\n        loadRef.current=true\n        setCustomersNames(data2)\n      }\n\n\n    }\n    React.useEffect(() => {\n      get_Data()\n    },[]);\n\n\n\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n      if(loadRef.current){\n        setLoaded(true)\n      }\n    },[rows]);\n\n    React.useEffect(() => {\n      if(loadRef.current){\n        setLoaded(true)\n      }\n    },[customerNames]);\n    \n    React.useEffect(() => {\n      setItems(getItems())\n    },[page]);\n\n    React.useEffect(() => {\n      setTime(local.getTime())\n    },[local]);\n\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        {loaded ? <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.queue_id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.queue_id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.queue_id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.queue_id}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.customer_id}</TableCell>\n                      <TableCell align=\"center\">{row. num_seat}</TableCell>\n                      <TableCell align=\"center\">{new Date(row.reserved_time).toLocaleTimeString([],{ hour: '2-digit', minute: '2-digit' })}</TableCell>\n                      <TableCell align=\"center\">{row.requested_feature_id}</TableCell>\n                      <TableCell align=\"center\">{`${row.is_seated==1}`}</TableCell>\n\n\n                    </TableRow>\n\n                  );\n                })}\n                {/*Add Element Row*/}\n               <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      ID\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Autocomplete\n                      disablePortal\n                 id=\"combo-box\"\n                 onChange={handleCustomers}\n                 isOptionEqualToValue={(option, value) => option.value === value.value}\n                  options={\n                  customerNames.map((item,index)=>{\n                  return {\"label\":item.customer_name,\"id\":item.customer_id}\n                  })\n                  }\n                  sx={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Customers\" />}\n    />\n                      \n                      \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <NumericField onChange={handleSeatsCount}/>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <LocalizationProvider dateAdapter={DateAdapter}>\n                      <TimePicker\n                      label=\"Time\"\n                      value={local}\n                      onChange={handleTime}\n                      renderInput={(params) => <TextField {...params} />}\n                      />\n                      </LocalizationProvider>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <TextField onChange={handleRequests}/> \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <FormControl fullWidth>\n\n                      <InputLabel>Seated</InputLabel>\n\n                      <Select\n                 value={seated}\n             onChange={handleSeated}\n                >\n    <MenuItem value={'True'}>True</MenuItem>\n    <MenuItem value={'False'}>False</MenuItem>\n\n  </Select>\n  </FormControl>\n\n    \n                      </TableCell>\n                      \n\n                    </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer> :  <LinearProgress />}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}","import React from \"react\";\nimport { getDialogActionsUtilityClass, TextField } from \"@mui/material\";\n\nfunction PhoneField(props) {\n    const{\n    onChange,\n    onKeyPress,\n    max=Number.MAX_SAFE_INTEGER,\n    min=0,\n    onInput\n    }=props\n  \n    \n    // let onKeyPress=props.onKeypress||function(){}\n    // let onInput=props.onInput||function(){}\n    // let max=props.max||Number.MAX_SAFE_INTEGER \n    // let min=props.min||0\n    //handle inproper values \n    const handleKeyPress= (event) => {\n    if(event.target.value.length==3||event.target.value.length==7){\n      if(event.which!=45){\n        event.preventDefault()\n        alert(\"Invalid input:Format 789-789-7777\")\n        }\n    }\n    else{\n\n      if(event.which != 8 && event.which != 13 && event.which != 0 && !(event.which >= 48 && event.which <= 57)){\n        event.preventDefault()\n        alert(\"Invalid input:Format 789-789-7777\")\n        }\n    }\n\n\n   \n      };\n\n      const handleInput= (event) => {\n        let value=parseInt(event.target.value)\n        if (value!==value){\n            return\n        }\n        if(value<min){\n        alert(\"Out of Range\")\n        event.target.value=min\n        return\n        }\n\n        if(value>max){\n            alert(\"Out of Range\")\n            event.target.value=max\n            return\n            }\n          };\n      \n      \n      \n\n    return (\n<TextField type=\"tel\" inputProps={{ onKeyPress: handleKeyPress,onInput:handleInput,maxLength: 12 }} onChange={onChange}></TextField>\n    );\n}\n\nexport default PhoneField;\n","import * as React from \"react\"\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport PhoneField from \"../Component/Phone\";\nimport LinearProgress from '@mui/material/LinearProgress';\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n//\"customer_id\": 1, \"name\": \"johhny customer\", \"phone\": \"888-888-8888\" \nconst headCells = [\n  {\n    id: \"customer_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Customer Number\"\n  },\n  {\n    id: \"customer_name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Name\"\n  },\n  {\n    id: \"customer_phone\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Phone Number\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const {\n    numSelected,\n    rows,\n    selected,\n    setRows,\n    setSelected\n  } = props;\n  const handleDelete = (event) => {\n    let filter=rows.filter((curr)=>{\n      if(!selected.includes(curr.customer_id)){\n        return true\n      }\n    }\n    )\n    setRows(filter)\n    setSelected([])\n  };\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n         <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n          <div>\n          {numSelected==1 &&<Tooltip title=\"Edit\">\n            <IconButton>\n            <EditIcon />\n            </IconButton>\n          </Tooltip>}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n       </Fragment>\n      ) : (\n        <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h4\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Customers\n        </Typography>\n          <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function CustomerTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [loaded, setLoaded] = React.useState([]);\n  const loadRef=React.useRef(false)\n\n  //insert values\n  const [name, setName] = React.useState(\"\");\n  const [phone, setPhone] = React.useState(\"\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.customer_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n  const handleName= (event) => {\n   setName(event.target.value)\n  };\n\n  const handlePhone= (event) => {\n    setPhone(event.target.value)\n   };\n\n   const handleSubmit= (event) => {\n    async function postData(){\n      let post= await fetch(\n        \"/api/add_customer\",{\n          method:'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body:JSON.stringify({\n            phone:phone,\n            name:name\n            })\n        })\n        post=await post.json()\n        console.log(\"Customer Insert\",post)\n        if (post.output==true){\n          get_Data()\n        }\n\n    }\n    postData()\n   \n    }\n  \n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n\n    async function get_Data(){\n      let data=await fetch(\"/api/get_customers\")\n      data=await data.json()\n      if(!data.error){\n        loadRef.current=true\n        setRows(data)\n      }\n    }\n\n    React.useEffect(() => { \n      get_Data()\n\n    },[]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n      if(loadRef){\n        setLoaded(true)\n      }\n    },[rows]);\n\n    React.useEffect(() => {\n        setItems(getItems())\n      },[page]);\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n       {loaded ?  <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.customer_id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.customer_id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.customer_id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.customer_id}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.customer_name}</TableCell>\n                      <TableCell align=\"center\">{row.customer_phone}</TableCell>\n                    </TableRow>\n                  );\n                })}\n                {/*Add Element Row*/}\n               <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      ID\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <TextField onChange={handleName}/> \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <PhoneField onChange={handlePhone} inputProps={{ inputMode: 'numeric', type: 'tel',  maxLength: 12 }}/>\n                      </TableCell>\n                    </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer> :   <LinearProgress />}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\nimport LinearProgress from '@mui/material/LinearProgress';\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"table_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Table Number\"\n  },\n  {\n    id: \"num_seat\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Number of Seats\"\n  },\n  {\n    id: \"feature_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Feature ID\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const {\n    numSelected,\n    rows,\n    selected,\n    setRows,\n    setSelected\n  } = props;\n  const handleDelete = (event) => {\n    let filter=rows.filter((curr)=>{\n      if(!selected.includes(curr.table_id)){\n        return true\n      }\n    }\n    )\n    setRows(filter)\n    setSelected([])\n  };\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n         <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n          <div>\n          {numSelected==1 &&<Tooltip title=\"Edit\">\n            <IconButton>\n            <EditIcon />\n            </IconButton>\n          </Tooltip>}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n       </Fragment>\n      ) : (\n        <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h4\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Dining Tables\n        </Typography>\n          <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const loadRef=React.useRef(false)\n\n  //insert values\n  const [num_seat, setSeats] = React.useState(0);\n  const [feature_id, setFeats] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.table_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n  const handleSeats= (event) => {\n   setSeats(event.target.value)\n  };\n\n  const handleFeats= (event) => {\n    setFeats(5)\n   };\n\n   const handleSubmit= (event) => {\n    async function postData(){\n      let post= await fetch(\n        \"/api/add_diningtable\",{\n          method:'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body:JSON.stringify({\n            feature_id:feature_id,\n            num_seat:num_seat\n            })\n        })\n        post=await post.json()\n        console.log(\"Customer Insert\",post)\n        if (post.output==true){\n          get_Data()\n        }\n\n    }\n    postData()\n   \n    }\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    async function get_Data(){\n      let data=await fetch(\"/api/get_diningtables\")\n      data=await data.json()\n      if(!data.error){\n        loadRef.current=true\n        setRows(data)\n      }\n    }\n    React.useEffect(() => {\n      get_Data()\n\n    },[]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n      if(loadRef.current){\n        setLoaded(true)\n      }\n    },[rows]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[page]);\n  return (\n    \n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        {loaded ? <TableContainer>\n        <Table\n          sx={{ minWidth: 750 }}\n          aria-labelledby=\"tableTitle\"\n          size={dense ? \"small\" : \"medium\"}\n        >\n          <EnhancedTableHead\n            numSelected={selected.length}\n            order={order}\n            orderBy={orderBy}\n            onSelectAllClick={handleSelectAllClick}\n            onRequestSort={handleRequestSort}\n            rowCount={rows.length}\n          \n          />\n          <TableBody>\n            {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                 rows.slice().sort(getComparator(order, orderBy)) */}\n            {items.map((row, index) => {\n                const isItemSelected = isSelected(row.table_id);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hoverT\n                    onClick={(event) => handleClick(event, row.table_id)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.table_id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          \"aria-labelledby\": labelId\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell\n                      component=\"th\"\n                      id={labelId}\n                      scope=\"row\"\n                      padding=\"none\"\n                      align=\"center\"\n                    >\n                      {row.table_id}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.num_seat}</TableCell>\n                    <TableCell align=\"center\">{row.feature_id}</TableCell>\n                  </TableRow>\n                );\n              })}\n              {/*Add Element Row*/}\n             <TableRow\n                    hoverT\n             >\n                   <TableCell>\n                     <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                     <AddBoxIcon/>\n                      </IconButton>\n                    </TableCell>\n                    <TableCell\n                      component=\"th\"\n                      scope=\"row\"\n                      padding=\"none\"\n                      align=\"center\"\n                    >\n                   ID\n                    </TableCell>\n                    <TableCell align=\"center\">\n                    <NumericField onChange={handleSeats}/> \n                    </TableCell>\n                    <TableCell align=\"center\">\n                    {/* <TextField onChange={handleFeats}/> */}\n                    5\n                    </TableCell>\n                  </TableRow>\n            {emptyRows > 0 && (\n              <TableRow\n                style={{\n                  height: (dense ? 33 : 53) * emptyRows\n                }}\n              >\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer> :     <LinearProgress />}\n\n        \n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport LinearProgress from '@mui/material/LinearProgress';\n\n \nfunction createData(waiter_id, waiter_name) {\n  return {\n    waiter_id, \n    waiter_name, \n  };\n}\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\nconst headCells = [\n  {\n    id: \"waiter_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Waiter Number\"\n  },\n  {\n    id: \"waiter_name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Name\"\n  }\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n\n  const \n  { \n    numSelected,\n    selected,\n    rows,setRows,\n    setSelected \n  } = props;\n\n  const handleDelete = (event) => {\n    let filter=rows.filter((curr)=>{\n      if(!selected.includes(curr.waiter_id)){\n        return true\n      }\n    }\n    )\n    setRows(filter)\n    setSelected([])\n  };\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n         <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n          <div>\n          {numSelected==1 &&<Tooltip title=\"Edit\">\n            <IconButton>\n            <EditIcon />\n            </IconButton>\n          </Tooltip>}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n       </Fragment>\n      ) : (\n        <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h4\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Waiters\n        </Typography>\n          <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const loadRef=React.useRef(false)\n\n\n  //insert values\n  const [name, setName] = React.useState(\"\");\n  \n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.waiter_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n\n   const handleWaiterName= (event) => {\n    setName(event.target.value)\n   };\n\n\n   const handleSubmit= (event) => {\n    console.log(name,\"we need to submit this to db\")\n    async function postData(){\n      let post= await fetch(\n        \"/api/add_waiter\",{\n          method:'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body:JSON.stringify({\n            name:name\n            })\n        })\n        post=await post.json()\n        console.log(\"Customer Insert\",post)\n        if (post.output==true){\n          get_Data()\n        }\n\n    }\n    postData()\n   };\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    async function get_Data(){\n      let data=await fetch(\"/api/get_waiters\")\n      data=await data.json()\n      if(!data.error){\n        loadRef.current=true\n        setRows(data)\n      }\n    }\n    React.useEffect(() => {\n      get_Data()\n    },[]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n      if(loadRef.current){\n        setLoaded(true)\n      }\n    },[rows]);\n    \n    React.useEffect(() => {\n      setItems(getItems())\n    },[page]);\n\n  \n\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        {loaded ? <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.waiter_id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.waiter_id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.waiter_id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.waiter_id}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.waiter_name}</TableCell>\n                    </TableRow>\n\n                  );\n                })}\n                {/*Add Element Row*/}\n               <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      ID\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <TextField onChange={handleWaiterName}/> \n                      </TableCell>\n                    </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer> : <LinearProgress />}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}\nexport{createData}\n","\nimport * as React from \"react\";\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TimePicker from '@mui/lab/TimePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateAdapter from '@mui/lab/AdapterDateFns';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CurrencyTextField from '@kylebeikirch/material-ui-currency-textfield'\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\nconst headCells = [\n    {\n        id: \"visits_id\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Visits ID\"\n    },\n  {\n    id: \"table_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Table ID\"\n  },\n  {\n    id: \"customer_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Customer ID\"\n  },\n  {\n    id: \"waiter_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Waiter ID\"\n  },\n  {\n    id: \"numGuest\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Guest Count\"\n  },\n  {\n    id: \"timeStart\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Start Time\"\n  },\n  {\n    id: \"timeEnd\",\n    numeric: true,\n    disablePadding: false,\n    label: \"End Time\"\n  },\n  {\n    id: \"checkAmount\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Check Amount\"\n  },\n\n  {\n    id: \"tipsAmount\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Tips Amount\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const {\n    numSelected,\n    rows,\n    selected,\n    setRows,\n    setSelected\n  } = props;\n  const handleDelete = (event) => {\n    let filter=rows.filter((curr)=>{\n      if(!selected.includes(curr.table_id)){\n        return true\n      }\n    }\n    )\n    setRows(filter)\n    setSelected([])\n  };\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n         <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n          <div>\n          {numSelected==1 &&<Tooltip title=\"Edit\">\n            <IconButton>\n            <EditIcon />\n            </IconButton>\n          </Tooltip>}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n       </Fragment>\n      ) : (\n        <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h4\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Visits\n        </Typography>\n          <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [loaded, setLoaded] = React.useState([]);\n  let loadedRef=React.useRef(false)\n\n  const [customersNames, setCustomersNames] = React.useState([]);\n  const [waitersNames, setWaitersNames] = React.useState([]);\n  const [UTCStart, setUTCStart] = React.useState(new Date());\n  const [UTCEnd, setUTCEnd] = React.useState(new Date());\n  const [tablesList, setTablesList] = React.useState([]);\n\n  //insert values\n  const [numGuest, setNumGuest] = React.useState(0);\n  const [startTime, setStartTime] = React.useState(\"\");\n  const [endTime, setEndTime] = React.useState(\"\");\n  const [customerID, setCustomerID] = React.useState([]);\n  const [waiterID, setWaiterID] = React.useState([]);\n  const [check, setCheck] = React.useState(0);\n  const [tip, setTips] = React.useState(0);\n  const [tableID, setTable] = React.useState();\n\n\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.table_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n\n  const handleCustomers= (event,newValue) => {\n   setCustomerID(newValue.id)\n  };\n\n\n  const handleWaiters= (event,newValue) => {\n    setWaiterID(newValue.id)\n   };\n\n   const handleTable= (event,newValue) => {\n    setTable(newValue.id)\n   };\n\n\n   const handleStartTime= (newValue) => {\n    setUTCStart(newValue)\n   };\n\n   const handleEndTime= (newValue) => {\n    setUTCEnd(newValue)\n   };\n\n\n   const handleNumGuest= (event) => {\n    setNumGuest(event.target.value)\n   };\n\n\n\n\n\n   const handleSubmit= (event) => {\n    console.log(customerID,waiterID,numGuest,startTime,endTime,check,tip,tableID)\n    async function postData(){\n      let post= await fetch(\n        \"/api/add_visit\",{\n          method:'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body:JSON.stringify({\n            customer_id:customerID,\n            waiter_id:waiterID,\n            num_guest:numGuest,\n            time_start:startTime,\n            time_stop:endTime,\n            check_amount:check,\n            tips_amount:tip,\n            table_id:tableID\n            })\n        })\n        post=await post.json()\n        console.log(\"Customer Insert\",post)\n        if (post.output==true){\n          get_Data()\n        }\n\n    }\n    postData()\n   \n   };\n\n \n   const handleCheck= (event) => {\n    setCheck(event.target.value)\n   };\n\n   const handleTip= (event) => {\n    setTips(event.target.value)\n   };\n\n\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n    async function get_Data(){\n      let data=await fetch(\"/api/get_visits\")\n      data=await data.json()\n      if(!data.error){\n        loadedRef.current=true\n        setRows(data)\n      }\n    \n\n      let data2=await fetch(\"/api/get_customers\") \n      data2= await data2.json()\n      if(!data2.error){\n        setCustomersNames(data2)\n      }\n\n      let data3=await fetch(\"/api/get_waiters\") \n      data3= await data3.json()\n      if(!data3.error){\n        setWaitersNames(data3)\n      }\n\n      let data4=await fetch(\"/api/get_diningtables\") \n      data4= await data4.json()\n      if(!data4.error){\n        \n        setTablesList(data4)\n      }\n\n\n    }\n\n    React.useEffect(() => {\n  \n        get_Data()\n  \n      },[]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rows]);\n\n    React.useEffect(() => {\n       if(loadedRef.current){\n           setLoaded(true)\n       }\n      },[tablesList]);\n    \n    React.useEffect(() => {\n      setItems(getItems())\n    },[page]);\n\n    React.useEffect(() => {\n      setStartTime(UTCStart.getTime())\n    },[UTCStart]);\n\n    React.useEffect(() => {\n        setEndTime(UTCEnd.getTime())\n      },[UTCEnd]);\n\n \n\n \n\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        {loaded ? <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.table_id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.table_id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.table_id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.visit_id}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.table_id}</TableCell>\n                      <TableCell align=\"center\">{row.customer_id}</TableCell>\n                      <TableCell align=\"center\">{row.waiter_id}</TableCell>\n                      <TableCell align=\"center\">{row.num_guest}</TableCell>\n                      <TableCell align=\"center\">                      \n                      {new Date(row.time_start).toLocaleTimeString([],{ hour: '2-digit', minute: '2-digit' })}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      {new Date(row.time_stop).toLocaleTimeString([],{ hour: '2-digit', minute: '2-digit' })}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.check_amount.toFixed(2)}</TableCell>\n                      <TableCell align=\"center\">{row.tips_amount.toFixed(2)}</TableCell>\n\n\n\n\n                    </TableRow>\n\n                  );\n                })}\n                {/*Add Element Row*/}\n               <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      ID\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Autocomplete\n                      disablePortal\n                 id=\"combo-box\"\n                 onChange={handleTable}\n                 isOptionEqualToValue={(option, value) => option.value === value.value}\n                  options={\n                  tablesList.map((item,index)=>{\n                  return {\"label\":item.table_id.toString(),\"id\":item.table_id}\n                  })\n                  }\n                  sx={{ width: 150 }}\n                renderInput={(params) => <TextField {...params} label=\"Tables\" />}\n    />\n    \n                      \n                      \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Autocomplete\n                      disablePortal\n                 id=\"combo-box\"\n                 onChange={handleCustomers}\n                 isOptionEqualToValue={(option, value) => option.value === value.value}\n\n                  options={\n                  customersNames.map((item,index)=>{\n                  return {\"label\":item.customer_name,\"id\":item.customer_id}\n                  })\n                  }\n                  sx={{ width: 150 }}\n                renderInput={(params) => <TextField {...params} label=\"Customers\" />}\n    />\n    \n                      \n                      \n                      </TableCell>\n                      <TableCell align=\"center\">\n                          \n                      <Autocomplete\n                      disablePortal\n                 id=\"combo-box\"\n                 onChange={handleWaiters}\n                 isOptionEqualToValue={(option, value) => option.value === value.value}\n\n                  options={\n                  waitersNames.map((item,index)=>{\n                  return {\"label\":item.waiter_name,\"id\":item.waiter_id}\n                  })\n                  }\n                  sx={{ width: 150 }}\n                renderInput={(params) => <TextField {...params} label=\"Waiters\" />}\n    />\n    \n                      \n                      \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <NumericField onChange={handleNumGuest}/>\n                      </TableCell>\n            \n                      <TableCell align=\"center\">\n                      <LocalizationProvider dateAdapter={DateAdapter}>\n                      <TimePicker\n                      label=\"Time\"\n                      value={UTCStart}\n                      onChange={handleStartTime}\n                      renderInput={(params) => <TextField {...params} />}\n                      />\n                      </LocalizationProvider>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <LocalizationProvider dateAdapter={DateAdapter}>\n                      <TimePicker\n                      label=\"Time\"\n                      value={UTCEnd}\n                      onChange={handleEndTime}\n                      renderInput={(params) => <TextField {...params} />}\n                      />\n                      </LocalizationProvider>\n                      </TableCell>\n                \n                      <TableCell align=\"center\">\n                      <CurrencyTextField\n\t\tlabel=\"Check\"\n\t\tvariant=\"outlined\"\n\t\tvalue={check}\n\t\tcurrencySymbol=\"$\"\n\t\tminimumValue=\"0\"\n\t\toutputFormat=\"number\"\n\t\tdecimalCharacter=\".\"\n\t\tdigitGroupSeparator=\",\"\n\t\tonChange={handleCheck}\n    />\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <CurrencyTextField\n\t\tlabel=\"Tips\"\n\t\tvariant=\"outlined\"\n\t\tvalue={tip}\n\t\tcurrencySymbol=\"$\"\n\t\tminimumValue=\"0\"\n\t\toutputFormat=\"number\"\n\t\tdecimalCharacter=\".\"\n\t\tdigitGroupSeparator=\",\"\n\t\tonChange={handleTip}\n    decimalPlaces=\"2\"\n    />\n                      </TableCell>\n                    \n                                    \n\n                    </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>: <LinearProgress />}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}\n","\nimport { Fragment } from \"react\";\nfunction Home() {\n    return(\n\n\n<Fragment>\n<h1>This is a home Page</h1>\n<p></p>\n<h1>Checkout Those Links</h1>\n\n</Fragment>\n    )\n    \n  }\n  \n  export default Home;\n  ","import React, { useState } from \"react\";\nimport {\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n makeStyles\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(()=>({\n    link:{\n        textDecoration:\"none\",\n        color: \"blue\",\n        fontSize: \"20px\",\n    },\n    icon:{\n        color: \"white\"\n    }\n}));\n\nfunction DrawerComponent() {\nconst classes = useStyles();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <>\n      <Drawer\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n         <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/\" className={\"link\"}>Home</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/diningtables\" className={\"link\"}>Dining Tables</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/customers\" className={\"link\"}>Customers</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/waitlist\" className={\"link\"}>Waitlist</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/waiters\" className={\"link\"}>Waiters</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/visits\" className={\"link\"}>Visits</Link>\n            </ListItemText>\n          </ListItem>\n        </List>\n      </Drawer>\n      <IconButton onClick={() => setOpenDrawer(!openDrawer)}>\n        <MenuIcon />\n      </IconButton>\n    </>\n  );\n}\nexport default DrawerComponent;","import React from \"react\";\nimport {\n    AppBar,\n    Toolbar,\n    CssBaseline,\n    Typography,\n    makeStyles,\n    useTheme,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport DrawerComponent from \"./Drawer\";\n\nconst useStyles = makeStyles((theme) => ({\n    navlinks: {\n        marginLeft: theme.spacing(5),\n        display: \"flex\",\n    },\n    logo: {\n        flexGrow: \"1\",\n        cursor: \"pointer\",\n    },\n}));\n\nfunction MenuBar() {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n    return (\n        <AppBar position=\"static\">\n            <CssBaseline />\n            <Toolbar>\n                <Typography variant=\"h4\" className={classes.logo}>\n                    Restaurant Management System\n                </Typography>\n                {isMobile ? (\n                    <DrawerComponent />\n                ) : (\n\n\n                    <div className={classes.navlinks}>\n                        <Link to=\"/\" className={\"link\"}>\n                            Home\n                        </Link>\n                        <Link to=\"/diningtables\" className={\"link\"}>\n                            Tables\n                        </Link>\n                        <Link to=\"/customers\" className={\"link\"}>\n                            Customers\n                        </Link>\n                        <Link to=\"/Waitlist\" className={\"link\"}>\n                            Waitlist\n                        </Link>\n                        <Link to=\"/Waiters\" className={\"link\"}>\n                            Waiters\n                        </Link>\n                        <Link to=\"/Visits\" className={\"link\"}>\n                            Visits\n                        </Link>\n                    </div>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n}\nexport default MenuBar;\n","import './style.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Waitlist from \"./Pages/Waitlist\";\nimport Customers from './Pages/Customers';\nimport DiningTables from './Pages/DiningTables';\nimport Waiters from './Pages/Waiters';\nimport Visits from './Pages/Visits';\nimport Home from './Pages/Home';\nimport Menubar from './Component/Menubar';\n\nfunction App() {\n  return (\n    <Router>\n      <Menubar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/waitlist\" component={Waitlist} />\n        <Route path=\"/customers\" component={Customers} />\n        <Route path=\"/diningtables\" component={DiningTables} />\n        <Route path=\"/waiters\" component={Waiters} />\n        <Route path=\"/visits\" component={Visits} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}