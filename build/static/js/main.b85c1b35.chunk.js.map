{"version":3,"sources":["Component/Numeric.js","Component/EditForms/WaitListEditForm.js","Pages/Waitlist.js","Component/Phone.js","Component/EditForms/CustomerEditForm.js","Pages/Customers.js","Component/EditForms/DiningTableEditForm.js","Pages/DiningTables.js","Component/EditForms/WaiterEditForm.js","Pages/Waiters.js","Pages/Visits.js","Pages/Home.js","Component/Drawer.js","Component/Menubar.js","App.js","index.js"],"names":["NumericField","props","onKeyPress","onChange","onInput","max","min","others","Number","MAX_SAFE_INTEGER","TextField","type","inputProps","event","console","log","which","preventDefault","alert","value","parseInt","target","TriggerButton","buttonRef","showModal","Tooltip","title","IconButton","className","ref","onClick","EditForm","onSubmit","dataFromParent","Box","sx","display","alignItems","m","Numeric","helperText","id","defaultValue","num_seat","Button","style","left","transform","variant","name","queue_id","CustomerModal","onClickOutside","onKeyDown","modalRef","closeModal","ReactDOM","createPortal","tag","role","tabIndex","viewBox","d","document","body","Component","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","label","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","color","indeterminate","checked","map","headCell","align","sortDirection","TableSortLabel","active","direction","property","component","visuallyHidden","EnhancedTableToolbar","rows","selected","setRows","setSelected","Toolbar","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","Typography","filter","curr","includes","remove_Data","requestOptions","method","headers","JSON","stringify","fetch","DiningTables","React","setOrder","setOrderBy","page","setPage","dense","rowsPerPage","setRowsPerPage","items","setItems","customerNames","setCustomersNames","Date","local","setLocal","loaded","setLoaded","loadedRef","loaded2","setLoaded2","customer_id","setcustomer_id","time","setTime","seated","setSeated","setNum_seat","getItems","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","emptyRows","Math","length","get_Data","data","json","error","current","data2","unshift","floor","getTime","width","Paper","mb","TableContainer","Table","minWidth","size","newSelecteds","n","TableBody","row","isItemSelected","indexOf","labelId","hoverT","selectedIndex","newSelected","concat","handleClick","scope","reserved_time","toLocaleTimeString","hour","minute","requested_feature_id","is_seated","fontSize","post","output","postData","Autocomplete","disablePortal","newValue","isOptionEqualToValue","option","options","item","customer_name","renderInput","params","LocalizationProvider","dateAdapter","DateAdapter","TimePicker","FormControl","fullWidth","InputLabel","Select","MenuItem","height","colSpan","LinearProgress","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","PhoneField","maxLength","Phone","customer_phone","CustomerEditForm","state","isShown","setState","closeButton","focus","toggleScrollLock","keyCode","modal","contains","querySelector","classList","toggle","Fragment","this","getCurrentData","i","beforeEdit","getElementById","phone","updateData","CustomerTables","rowsOfCustomers","useState","useRef","setName","setPhone","useEffect","isSelected","addData","feature_id","table_id","DiningTableModel","DiningTableEditForm","tableId","numSeat","featureId","setSeats","waiter_name","waiter_id","WaitListEditForm","WaiterEditForm","visit_id","customersNames","waitersNames","setWaitersNames","UTCStart","setUTCStart","UTCEnd","setUTCEnd","tablesList","setTablesList","numGuest","setNumGuest","startTime","setStartTime","endTime","setEndTime","customerID","setCustomerID","waiterID","setWaiterID","check","setCheck","tip","setTips","tableID","setTable","data3","data4","num_guest","time_start","time_stop","check_amount","toFixed","tips_amount","toString","currencySymbol","minimumValue","outputFormat","decimalCharacter","digitGroupSeparator","decimalPlaces","Home","useStyles","makeStyles","link","textDecoration","icon","DrawerComponent","openDrawer","setOpenDrawer","Drawer","open","onClose","List","ListItem","ListItemText","to","navlinks","marginLeft","spacing","logo","flexGrow","cursor","MenuBar","classes","useTheme","isMobile","useMediaQuery","breakpoints","down","AppBar","position","CssBaseline","App","Menubar","exact","path","Waitlist","Customers","Waiters","Visits","from","render","StrictMode"],"mappings":"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","file":"static/js/main.b85c1b35.chunk.js","sourcesContent":["import React from \"react\";\nimport {  TextField } from \"@mui/material\";\n\nfunction NumericField(props) {\n   \n    let{onKeyPress,onChange,onInput,max,min,...others}=props\n\n    onKeyPress=onKeyPress||function(){}\n    onChange=onChange||function(){}\n    onInput=onInput||function(){}\n    max=max||Number.MAX_SAFE_INTEGER \n    min=min||0\n    //handle inproper values \n    const handleKeyPress = (event) => {\n        console.log(event.which)\n        if (event.which != 8 && event.which != 13 && event.which != 0 && !(event.which >= 48 && event.which <= 57)) {\n            event.preventDefault()\n            alert(\"Invalid input:Please Enter A number\")\n        }\n    };\n\n    const handleInput = (event) => {\n        let value = parseInt(event.target.value)\n        if (value !== value) {\n            return\n        }\n        if (value < min) {\n            alert(`Out of Range:${min}-${max}`)\n            event.target.value = min\n            return\n        }\n\n        if (value > max) {\n            alert(\"Out of Range\")\n            event.target.value = max\n            return\n        }\n    };\n\n\n\n\n    return (\n        <TextField type=\"number\" inputProps={{ onKeyPress: handleKeyPress, onInput: handleInput }} onChange={onChange} max={max} min={min} {...others}></TextField>\n    );\n}\n\nexport default NumericField;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FocusTrap from 'focus-trap-react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport NumericField from '../Numeric';\n\n// Edit Form\n\nconst TriggerButton = ({ buttonRef, showModal }) => {\n  return (\n    <Tooltip title=\"Edit\">\n      <IconButton\n        className=\"btn btn-lg btn-danger center modal-button\"\n        ref={buttonRef}\n        onClick={showModal}>\n        <EditIcon />\n      </IconButton>\n    </Tooltip>\n\n  );\n};\n\nconst EditForm = ({ onSubmit, dataFromParent }) => {\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          '& > :not(style)': { m: 1 },\n        }}\n      >\n        <NumericField \n          helperText=\"Edit Seat Count\"\n          id=\"editingNumSeat\"\n          defaultValue={dataFromParent.num_seat}\n        />\n      </Box>\n      <Button\n        style={{ \n          left: '50%',\n          transform: \"translate(-50%, 0)\" \n        }}\n        variant=\"outlined\"\n        type=\"submit\">\n        Submit\n      </Button>\n      <input type=\"hidden\" id=\"editingId\" name=\"editingId\" \n      value={dataFromParent.queue_id}></input>\n    </form>\n  );\n};\n\nconst CustomerModal = ({\n  onClickOutside,\n  onKeyDown,\n  modalRef,\n  buttonRef,\n  closeModal,\n  onSubmit,\n  dataFromParent\n}) => {\n  return ReactDOM.createPortal(\n    <FocusTrap>\n      <aside\n        tag=\"aside\"\n        role=\"dialog\"\n        tabIndex=\"-1\"\n        aria-modal=\"true\"\n        className=\"modal-cover\"\n        onClick={onClickOutside}\n        onKeyDown={onKeyDown}\n      >\n        <div className=\"modal-area\" ref={modalRef}>\n          <button\n            ref={buttonRef}\n            aria-label=\"Close Modal\"\n            aria-labelledby=\"close-modal\"\n            className=\"_modal-close\"\n            onClick={closeModal}\n          >\n            <span id=\"close-modal\" className=\"_hide-visual\">\n              Close\n            </span>\n            <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\n              <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n            </svg>\n          </button>\n          <div className=\"modal-body\">\n            <EditForm \n            onSubmit={onSubmit}\n            dataFromParent={dataFromParent}/>\n          </div>\n        </div>\n      </aside>\n    </FocusTrap>,\n    document.body\n  );\n};\n\n\nexport class WaitListEditForm extends Component {\n  state = { isShown: false };\n  showModal = () => {\n    this.setState({ isShown: true }, () => {\n      this.closeButton.focus();\n    });\n    this.toggleScrollLock();\n  };\n  closeModal = () => {\n    this.setState({ isShown: false });\n    this.TriggerButton.focus();\n    this.toggleScrollLock();\n  };\n  onKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n  onClickOutside = (event) => {\n    if (this.modal && this.modal.contains(event.target)) return;\n    this.closeModal();\n  };\n\n  toggleScrollLock = () => {\n    document.querySelector('html').classList.toggle('scroll-lock');\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <TriggerButton\n          showModal={this.showModal}\n          buttonRef={(n) => (this.TriggerButton = n)}\n        />\n        {this.state.isShown ? (\n          <CustomerModal\n            onSubmit={this.props.onSubmit}\n            modalRef={(n) => (this.modal = n)}\n            buttonRef={(n) => (this.closeButton = n)}\n            closeModal={this.closeModal}\n            onKeyDown={this.onKeyDown}\n            onClickOutside={this.onClickOutside}\n            dataFromParent={this.props.dataFromParent}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WaitListEditForm;","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\nimport { Select } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { InputLabel } from \"@mui/material\";\nimport { FormControl } from \"@mui/material\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TimePicker from '@mui/lab/TimePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateAdapter from '@mui/lab/AdapterDateFns';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport WaitListEditForm from \"../Component/EditForms/WaitListEditForm.js\"\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n//[{ \"queue_id\": 1, \"customer_id\": 1, \"numberseat\": 8, \"time\": \"8:30pm\", \"request\": \"null\", \"seated\": \"false\" }]\nconst headCells = [\n  {\n    id: \"queue_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Queue Number\"\n  },\n  {\n    id: \"customer_id\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Customer Number\"\n  },\n  {\n    id: \" num_seat\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Total Seats\"\n  },\n  {\n    id: \"rserved_time\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Reserve Time\"\n  },\n  {\n    id: \"requested_feature_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Request ID\"\n  },\n  {\n    id: \"seated\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Seated ?\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const {\n    numSelected,\n    rows,\n    selected,\n    setRows,\n    setSelected\n  } = props;\n\n\n  const getCurrentData = () => {\n\n    if (selected.length != 1) {\n      return\n    }\n    for (let i=0; i<rows.length; i++) {\n      if (rows[i].queue_id== selected[0]) {\n        return rows[i]\n      }\n    }\n  };\n\n  const handleEdit = (event) => {\n\n    const beforeEdit = getCurrentData()\n\n    let id = document.getElementById(\"editingId\").value\n    let customer = document.getElementById(\"editingCustomer\").value || beforeEdit.name\n    let is_seat = document.getElementById(\"editingSeatBool\").value || beforeEdit.name\n    let time = document.getElementById(\"editingTime\").value || beforeEdit.name\n    let request= document.getElementById(\"editingFeature\").value || beforeEdit.name\n    let num_seat= document.getElementById(\"editingNumSeat\").value || beforeEdit.name\n\n    if (beforeEdit.waiter_id == id) {\n\n      async function updateData() {\n\n        const requestOptions = {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ \n            \"queue_id\": id,\n            \"is_seated\":is_seat===\"True\",\n            \"customer_id\":customer,\n            \"reserved_time\":time,\n            \"requested_feature_id\":request,\n            \"num_seat\":num_seat\n\n        })}\n      \n        await fetch(\"/api/update_waiter\", requestOptions)\n      }\n      updateData()\n    }\n\n    \n  };\n  const handleDelete = (event) => {\n    let filter = rows.filter((curr) => {\n      if (!selected.includes(curr.queue_id)) {\n        return true\n      } else {\n        async function remove_Data() {\n          const requestOptions = {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"queue_id\": curr.queue_id })\n          }\n          await fetch(\"/api/remove_waitinglist\", requestOptions)\n        }\n        remove_Data()\n        return false\n      }\n    })\n    setRows(filter)\n    setSelected([])\n  };\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n         <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n          <div>\n          {/* {numSelected == 1 && \n            <WaitListEditForm \n              onSubmit={handleEdit}\n              dataFromParent={getCurrentData()}\n              />} */}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n       </Fragment>\n      ) : (\n        <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h4\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Waitlist\n        </Typography>\n          <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [customerNames, setCustomersNames] = React.useState([]);\n  const [local, setLocal] = React.useState(new Date());\n  const [loaded, setLoaded] = React.useState(false);\n  const loadedRef=React.useRef(0)\n\n\n  const [loaded2, setLoaded2] = React.useState(false);\n \n\n\n  //insert values\n  const [customer_id, setcustomer_id] = React.useState(0);\n  const [time, setTime] = React.useState(\"\");\n  const [seated, setSeated] = React.useState(\"\");\n  const [ num_seat, setNum_seat] = React.useState(0);\n  const [request, setRequests] = React.useState(\"\");\n  \n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.queue_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n\n  const handleCustomers= (event,newValue) => {\n   setcustomer_id(newValue.id)\n  };\n\n  const handleSeatsCount= (event) => {\n    setNum_seat(event.target.value)\n   };\n\n   const handleTime= (newValue) => {\n    setLocal(newValue)\n   };\n\n   const handleRequests= (event) => {\n    setRequests(event.target.value)\n   };\n\n   const handleSeated= (event) => {\n    setSeated(event.target.value)\n   };\n\n   const handleSubmit= (event) => {\n    async function postData(){\n      let post= await fetch(\n        \"/api/add_waitinglist\",{\n          method:'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body:JSON.stringify({\n            is_seated:seated===\"True\",\n            customer_id:customer_id,\n            reserved_time:time,\n            requested_feature_id:2,\n            num_seat:num_seat\n\n            })\n        })\n        post=await post.json()\n        if (post.output==true){\n          get_Data()\n        }\n\n    }\n    postData()\n   \n    }\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    async function get_Data(){\n      let data=await fetch(\"/api/get_waitlist\")\n      data=await data.json()\n      if(!data.error){\n        setRows(data)\n        loadedRef.current=loadedRef.current+1\n      }\n    \n\n      let data2=await fetch(\"/api/get_customers\") \n      data2= await data2.json()\n      if(!data2.error){\n        data2.unshift({\"customer_id\":\"null\",\"customer_name\":\"null\"})\n        setCustomersNames(data2)\n        setLoaded2(true)\n      }\n\n\n    }\n    React.useEffect(() => {\n      get_Data()\n    },[]);\n\n\n\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n\n      if(loadedRef.current==1){\n        setLoaded(true)\n      }\n      else if(loadedRef.current>1){\n        setPage(Math.floor((rows.length-1)/rowsPerPage))\n        setLoaded(true)\n      }\n    },[rows]);\n\n\n    \n    React.useEffect(() => {\n      setItems(getItems())\n    },[page]);\n\n    React.useEffect(() => {\n      setTime(local.getTime())\n    },[local]);\n\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        {loaded ? <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.queue_id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.queue_id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.queue_id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.queue_id}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.customer_id}</TableCell>\n                      <TableCell align=\"center\">{row. num_seat}</TableCell>\n                      <TableCell align=\"center\">{new Date(row.reserved_time).toLocaleTimeString([],{ hour: '2-digit', minute: '2-digit' })}</TableCell>\n                      <TableCell align=\"center\">{row.requested_feature_id}</TableCell>\n                      <TableCell align=\"center\">{`${row.is_seated==1}`}</TableCell>\n\n\n                    </TableRow>\n\n                  );\n                })}\n                {/*Add Element Row*/}\n               {loaded2 ? <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      ID\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Autocomplete\n                      disablePortal\n                 id=\"combo-box\"\n                 onChange={handleCustomers}\n                 isOptionEqualToValue={(option, value) => option.value === value.value}\n                  options={\n                  customerNames.map((item,index)=>{\n                  return {\"label\":item.customer_name,\"id\":item.customer_id}\n                  })\n                  }\n                  sx={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Customers\" />}\n    />\n                      \n                      \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <NumericField onChange={handleSeatsCount}/>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <LocalizationProvider dateAdapter={DateAdapter}>\n                      <TimePicker\n                      label=\"Time\"\n                      value={local}\n                      onChange={handleTime}\n                      renderInput={(params) => <TextField {...params} />}\n                      />\n                      </LocalizationProvider>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      2\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <FormControl fullWidth>\n\n                      <InputLabel>Seated</InputLabel>\n\n                      <Select\n                 value={seated}\n             onChange={handleSeated}\n                >\n    <MenuItem value={'True'}>True</MenuItem>\n    <MenuItem value={'False'}>False</MenuItem>\n\n  </Select>\n  </FormControl>\n\n    \n                      </TableCell>\n                      \n\n                    </TableRow>: <div/>}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer> :  <LinearProgress />}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}","import React from \"react\";\nimport { TextField } from \"@mui/material\";\n\nfunction PhoneField(props) {\n  const {...others}=props\n\n\n\n  //handle inproper values \n  const handleKeyPress = (event) => {\n    if (event.target.value.length == 3 || event.target.value.length == 7) {\n      if (event.which != 45) {\n        event.preventDefault()\n        alert(\"Invalid input:Format 789-789-7777\")\n      }\n    }\n    else {\n\n      if (event.which != 8 && event.which != 13 && event.which != 0 && !(event.which >= 48 && event.which <= 57)) {\n        event.preventDefault()\n        alert(\"Invalid input:Format 789-789-7777\")\n      }\n    }\n\n\n\n  };\n\n\n\n\n\n  return (\n    <TextField type=\"tel\" inputProps={{ onKeyPress: handleKeyPress, maxLength: 12 } }{...others}></TextField>\n  );\n}\n\nexport default PhoneField;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FocusTrap from 'focus-trap-react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhoneField from '../Phone';\n\n\n// Edit Form\n\nconst TriggerButton = ({ buttonRef, showModal }) => {\n  return (\n    <Tooltip title=\"Edit\">\n      <IconButton\n        className=\"btn btn-lg btn-danger center modal-button\"\n        ref={buttonRef}\n        onClick={showModal}>\n        <EditIcon />\n      </IconButton>\n    </Tooltip>\n\n  );\n};\n\nconst EditForm = ({ onSubmit, dataFromParent }) => {\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          '& > :not(style)': { m: 1 },\n        }}\n      >\n        <TextField\n          helperText=\"Edit the name\"\n          id=\"editingName\"\n          defaultValue={dataFromParent.customer_name}\n        />\n        <PhoneField\n          helperText=\"Edit the phone number\"\n          id=\"editingPhone\"\n          defaultValue={dataFromParent.customer_phone}\n        />\n      </Box>\n      <Button\n        style={{ \n          left: '50%',\n          transform: \"translate(-50%, 0)\" \n        }}\n        variant=\"outlined\"\n        type=\"submit\">\n        Submit\n      </Button>\n      <input type=\"hidden\" id=\"editingId\" name=\"editingId\" \n      value={dataFromParent.customer_id}></input>\n    </form>\n  );\n};\n\nconst CustomerModal = ({\n  onClickOutside,\n  onKeyDown,\n  modalRef,\n  buttonRef,\n  closeModal,\n  onSubmit,\n  dataFromParent\n}) => {\n  return ReactDOM.createPortal(\n    <FocusTrap>\n      <aside\n        tag=\"aside\"\n        role=\"dialog\"\n        tabIndex=\"-1\"\n        aria-modal=\"true\"\n        className=\"modal-cover\"\n        onClick={onClickOutside}\n        onKeyDown={onKeyDown}\n      >\n        <div className=\"modal-area\" ref={modalRef}>\n          <button\n            ref={buttonRef}\n            aria-label=\"Close Modal\"\n            aria-labelledby=\"close-modal\"\n            className=\"_modal-close\"\n            onClick={closeModal}\n          >\n            <span id=\"close-modal\" className=\"_hide-visual\">\n              Close\n            </span>\n            <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\n              <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n            </svg>\n          </button>\n          <div className=\"modal-body\">\n            <EditForm \n            onSubmit={onSubmit}\n            dataFromParent={dataFromParent}/>\n          </div>\n        </div>\n      </aside>\n    </FocusTrap>,\n    document.body\n  );\n};\n\n\nclass CustomerEditForm extends Component {\n  state = { isShown: false };\n  showModal = () => {\n    this.setState({ isShown: true }, () => {\n      this.closeButton.focus();\n    });\n    this.toggleScrollLock();\n  };\n  closeModal = () => {\n    this.setState({ isShown: false });\n    this.TriggerButton.focus();\n    this.toggleScrollLock();\n  };\n  onKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n  onClickOutside = (event) => {\n    if (this.modal && this.modal.contains(event.target)) return;\n    this.closeModal();\n  };\n\n  toggleScrollLock = () => {\n    document.querySelector('html').classList.toggle('scroll-lock');\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <TriggerButton\n          showModal={this.showModal}\n          buttonRef={(n) => (this.TriggerButton = n)}\n        />\n        {this.state.isShown ? (\n          <CustomerModal\n            onSubmit={this.props.onSubmit}\n            modalRef={(n) => (this.modal = n)}\n            buttonRef={(n) => (this.closeButton = n)}\n            closeModal={this.closeModal}\n            onKeyDown={this.onKeyDown}\n            onClickOutside={this.onClickOutside}\n            dataFromParent={this.props.dataFromParent}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CustomerEditForm;","import React, { Component } from 'react';\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport ReactDOM from 'react-dom';\nimport FocusTrap from 'focus-trap-react';\nimport Button from '@mui/material/Button';\n\nimport CustomerEditForm from \"../Component/EditForms/CustomerEditForm.js\"\nimport NumericField from \"../Component/Numeric\";\nimport PhoneField from \"../Component/Phone\";\n\nimport { customerData } from \"../DatabaseTest\";\nimport { Pages } from \"@material-ui/icons\";\nimport { WindowSharp } from \"@mui/icons-material\";\nimport { LinearProgress } from '@mui/material';\n\n\nfunction refreshPage() {\n  window.location.reload();\n}\n\nfunction createData(customer_id, name, phone) {\n  return {\n    customer_id,\n    name,\n    phone,\n  };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getNextId(rowsOfCustomers) {\n\n  if (rowsOfCustomers.length > 0) {\n    return rowsOfCustomers[rowsOfCustomers.length - 1].customer_id + 1\n  } else {\n    return '?'\n  }\n}\nconst headCells = [\n  {\n    id: \"customer_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Customer Number\"\n  },\n  {\n    id: \"customer_name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Name\"\n  },\n  {\n    id: \"customer_phone\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Phone Number\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const { numSelected } = props;\n  const { selected } = props;\n  const { rows } = props;\n  const { setRows } = props;\n  const { setSelected } = props;\n  const handleDelete = (event) => {\n    let alert=\"\"\n    let filter = rows.filter((curr) => {\n      if (!selected.includes(curr.customer_id)) {\n        return true\n      } else {\n        async function remove_Data() {\n          const requestOptions = {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"customer_id\": curr.customer_id })\n          }\n          let data=await fetch(\"/api/remove_customer\", requestOptions)\n          data=await data.json()\n          console.log(data)\n          if(data[\"error\"]){\n            alert=alert+data[\"error\"]\n            return true\n          }     \n          else{\n            return false\n\n          }\n        }\n        remove_Data()\n        \n      }\n    })\n    setRows(filter)\n    setSelected([])\n  };\n\n  const handleEdit = (event) => {\n\n    const beforeEdit = getCurrentData()\n\n    let id = document.getElementById(\"editingId\").value || beforeEdit.customer_id\n    let name = document.getElementById(\"editingName\").value || beforeEdit.customer_name\n    let phone = document.getElementById(\"editingPhone\").value || beforeEdit.customer_phone\n\n    async function updateData() {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          \"customer_id\": id,\n          \"customer_name\": name,\n          \"customer_phone\": phone\n        })\n      }\n      await fetch(\"/api/update_customer\", requestOptions)\n    }\n    updateData()\n  }\n\n\n\n  const getCurrentData = () => {\n\n    if (selected.length != 1) {\n      return\n    }\n    for (let i = 0; i < rows.length; i++) {\n      if (rows[i].customer_id == selected[0]) {\n        return rows[i]\n      }\n    }\n  };\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Fragment>\n          <Typography\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n            }}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {numSelected} selected\n          </Typography>\n          <div>\n            {numSelected == 1 &&\n              <CustomerEditForm\n                onSubmit={handleEdit}\n                dataFromParent={getCurrentData()}\n              />}\n            <Tooltip title=\"Delete\">\n              <IconButton onClick={handleDelete}>\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Typography\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n            }}\n            variant=\"h4\"\n            id=\"tableTitle\"\n            component=\"div\"\n          >\n            Customers\n          </Typography>\n          <Tooltip title=\"Filter list\">\n            <IconButton>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar\n    >\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function CustomerTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"customer_id\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const loadedRef = React.useRef(0)\n\n  //insert values\n  const [name, setName] = React.useState(\"\");\n  const [phone, setPhone] = React.useState(\"\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.customer_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n  const handleName = (event) => {\n    setName(event.target.value)\n  };\n\n  const handlePhone = (event) => {\n    setPhone(event.target.value)\n  };\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault()\n  \n\n    async function addData() \n    {\n    \n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ customer_name: name, customer_phone: phone })\n      }\n      let post=await fetch(\"/api/add_customer\", requestOptions)\n      post=await post.json()\n      if(post[\"output\"]==true){\n        get_Data()\n      }\n     \n    }\n    addData()\n\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    async function get_Data() {\n      let data = await fetch(\"/api/get_customers\")\n      data = await data.json()\n      if (!data.error) {\n        loadedRef.current = loadedRef.current + 1\n        setRows(data)\n      }\n    }\n\n  React.useEffect(() => {\n \n    get_Data()\n  }, []);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [rowsPerPage]);\n\n  React.useEffect(() => {\n    setItems(getItems())\n    if (loadedRef.current == 1) {\n      setLoaded(true)\n    }\n    else if (loadedRef.current > 1) {\n      setPage(Math.floor((rows.length - 1) / rowsPerPage))\n      setLoaded(true)\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [page]);\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected} />\n        {loaded ? <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n\n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                const isItemSelected = isSelected(row.customer_id);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hoverT\n                    onClick={(event) => handleClick(event, row.customer_id)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.customer_id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          \"aria-labelledby\": labelId\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell\n                      component=\"th\"\n                      id={labelId}\n                      scope=\"row\"\n                      padding=\"none\"\n                      align=\"center\"\n                    >\n                      {row.customer_id}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.customer_name}</TableCell>\n                    <TableCell align=\"center\">{row.customer_phone}</TableCell>\n                  </TableRow>\n                );\n              })}\n              {/*Add Element Row*/}\n              <TableRow\n                hoverT\n              >\n                <TableCell>\n                  <IconButton className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                    <AddBoxIcon />\n                  </IconButton>\n                </TableCell>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"none\"\n                  align=\"center\"\n                >\n                  {getNextId(rows)}\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TextField onChange={handleName} />\n                </TableCell>\n                <TableCell align=\"center\">\n                  <PhoneField onChange={handlePhone} />\n                </TableCell>\n              </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer> : <LinearProgress /> }\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}\nexport { createData }","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FocusTrap from 'focus-trap-react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport EditIcon from '@mui/icons-material/Edit';\n\nconst TriggerButton = ({ buttonRef, showModal }) => {\n  return (\n    <Tooltip title=\"Edit\">\n      <IconButton\n        className=\"btn btn-lg btn-danger center modal-button\"\n        ref={buttonRef}\n        onClick={showModal}>\n        <EditIcon />\n      </IconButton>\n    </Tooltip>\n\n  );\n};\n\nconst EditForm = ({ onSubmit, dataFromParent }) => {\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          '& > :not(style)': { m: 1 },\n        }}\n      >\n        <TextField\n          helperText=\"Edit the number of seats\"\n          id=\"editingNumSeat\"\n          defaultValue={dataFromParent.num_seat}\n        />\n        <TextField\n          helperText=\"Edit the table feature ID\"\n          id=\"editingFeatureId\"\n          defaultValue={dataFromParent.feature_id}\n        />\n      </Box>\n      <Button\n        style={{ \n          left: '50%',\n          transform: \"translate(-50%, 0)\" \n        }}\n        variant=\"outlined\"\n        type=\"submit\">\n        Submit\n      </Button>\n      <input type=\"hidden\" id=\"editingTableId\" name=\"editingTableId\" \n      value={dataFromParent.table_id}></input>\n    </form>\n  );\n};\n\nconst DiningTableModel = ({\n  onClickOutside,\n  onKeyDown,\n  modalRef,\n  buttonRef,\n  closeModal,\n  onSubmit,\n  dataFromParent\n}) => {\n  return ReactDOM.createPortal(\n    <FocusTrap>\n      <aside\n        tag=\"aside\"\n        role=\"dialog\"\n        tabIndex=\"-1\"\n        aria-modal=\"true\"\n        className=\"modal-cover\"\n        onClick={onClickOutside}\n        onKeyDown={onKeyDown}\n      >\n        <div className=\"modal-area\" ref={modalRef}>\n          <button\n            ref={buttonRef}\n            aria-label=\"Close Modal\"\n            aria-labelledby=\"close-modal\"\n            className=\"_modal-close\"\n            onClick={closeModal}\n          >\n            <span id=\"close-modal\" className=\"_hide-visual\">\n              Close\n            </span>\n            <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\n              <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n            </svg>\n          </button>\n          <div className=\"modal-body\">\n            <EditForm \n            onSubmit={onSubmit}\n            dataFromParent={dataFromParent}/>\n          </div>\n        </div>\n      </aside>\n    </FocusTrap>,\n    document.body\n  );\n};\n\n\nclass DiningTableEditForm extends Component {\n  state = { isShown: false };\n  showModal = () => {\n    this.setState({ isShown: true }, () => {\n      this.closeButton.focus();\n    });\n    this.toggleScrollLock();\n  };\n  closeModal = () => {\n    this.setState({ isShown: false });\n    this.TriggerButton.focus();\n    this.toggleScrollLock();\n  };\n  onKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n  onClickOutside = (event) => {\n    if (this.modal && this.modal.contains(event.target)) return;\n    this.closeModal();\n  };\n\n  toggleScrollLock = () => {\n    document.querySelector('html').classList.toggle('scroll-lock');\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <TriggerButton\n          showModal={this.showModal}\n          buttonRef={(n) => (this.TriggerButton = n)}\n        />\n        {this.state.isShown ? (\n          <DiningTableModel\n            onSubmit={this.props.onSubmit}\n            modalRef={(n) => (this.modal = n)}\n            buttonRef={(n) => (this.closeButton = n)}\n            closeModal={this.closeModal}\n            onKeyDown={this.onKeyDown}\n            onClickOutside={this.onClickOutside}\n            dataFromParent={this.props.dataFromParent}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DiningTableEditForm;","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\nimport LinearProgress from '@mui/material/LinearProgress';\nimport DiningTableEditForm from \"../Component/EditForms/DiningTableEditForm.js\"\n\nfunction refreshPage() {\n  window.location.reload();\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"table_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Table Number\"\n  },\n  {\n    id: \"num_seat\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Number of Seats\"\n  },\n  {\n    id: \"feature_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Feature ID\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const {\n    numSelected,\n    rows,\n    selected,\n    setRows,\n    setSelected\n  } = props;\n  const handleDelete = (event) => {\n    let alert=\"\"\n    let filter = rows.filter((curr) => {\n      if (!selected.includes(curr.table_id)) {\n        return true\n      } else {\n        async function remove_Data() {\n          const requestOptions = {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"table_id\": curr.table_id })\n          }\n          let data=await fetch(\"/api/remove_diningtables\", requestOptions)    \n          data=await data.json()\n          console.log(data)\n          if(data[\"error\"]){\n            alert=alert+data[\"error\"]\n            return true\n          }     \n          else{\n            return false\n\n          }\n        }\n        remove_Data()\n        console.log(alert)\n      }\n    })\n    setRows(filter)\n    setSelected([])\n  };\n\n  const handleEdit = (event) => {\n\n    const beforeEdit = getCurrentData()\n    let tableId = document.getElementById(\"editingTableId\").value || beforeEdit.table_id\n    let numSeat = document.getElementById(\"editingNumSeat\").value || beforeEdit.num_seat\n    let featureId = document.getElementById(\"editingFeatureId\").value || beforeEdit.feature_id\n\n    async function updateData() {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          \"table_id\": tableId,\n          \"num_seat\": numSeat,\n          \"feature_id\": featureId\n        })\n      }\n      console.log(requestOptions)\n      await fetch(\"/api/update_diningtables\", requestOptions)\n    }\n    updateData()\n  }\n\n\n  const getCurrentData = () => {\n\n    if (selected.length != 1) {\n      return\n    }\n    for (let i = 0; i < rows.length; i++) {\n      if (rows[i].table_id == selected[0]) {\n        return rows[i]\n      }\n    }\n  }\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Fragment>\n          <Typography\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n            }}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {numSelected} selected\n          </Typography>\n          <div>\n            {numSelected == 1 &&\n              <DiningTableEditForm\n                onSubmit={handleEdit}\n                dataFromParent={getCurrentData()}\n              />}\n            <Tooltip title=\"Delete\">\n              <IconButton onClick={handleDelete}>\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Typography\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n            }}\n            variant=\"h4\"\n            id=\"tableTitle\"\n            component=\"div\"\n          >\n            Dining Tables\n          </Typography>\n          <Tooltip title=\"Filter list\">\n            <IconButton>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const loadedRef = React.useRef(0)\n\n  //insert valuesFha\n  const [num_seat, setSeats] = React.useState(0);\n  const [feature_id, setFeats] = React.useState(2);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.table_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n  const handleSeats = (event) => {\n    setSeats(event.target.value)\n  };\n\n  const handleFeats = (event) => {\n    setFeats(5)\n  };\n\n  const handleSubmit = (event) => {\n    async function postData() {\n      let post = await fetch(\n        \"/api/add_diningtable\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          feature_id: feature_id,\n          num_seat: num_seat\n        })\n      })\n      post = await post.json()\n      if (post.output == true) {\n        get_Data()\n      }\n    }\n    postData()\n\n  }\n\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  async function get_Data() {\n    let data = await fetch(\"/api/get_diningtables\")\n    data = await data.json()\n    if (!data.error) {\n      loadedRef.current = loadedRef.current + 1\n      setRows(data)\n    }\n  }\n  React.useEffect(() => {\n    get_Data()\n\n  }, []);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [rowsPerPage]);\n\n\n  React.useEffect(() => {\n    setItems(getItems())\n    if (loadedRef.current == 1) {\n      setLoaded(true)\n    }\n    else if (loadedRef.current > 1) {\n      setPage(Math.floor((rows.length - 1) / rowsPerPage))      \n      setLoaded(true)\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [page]);\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected} />\n        {loaded ? <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n\n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                 rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                const isItemSelected = isSelected(row.table_id);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hoverT\n                    onClick={(event) => handleClick(event, row.table_id)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.table_id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          \"aria-labelledby\": labelId\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell\n                      component=\"th\"\n                      id={labelId}\n                      scope=\"row\"\n                      padding=\"none\"\n                      align=\"center\"\n                    >\n                      {row.table_id}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.num_seat}</TableCell>\n                    <TableCell align=\"center\">{row.feature_id}</TableCell>\n                  </TableRow>\n                );\n              })}\n              {/*Add Element Row*/}\n              <TableRow\n                hoverT\n              >\n                <TableCell>\n                  <IconButton className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                    <AddBoxIcon />\n                  </IconButton>\n                </TableCell>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"none\"\n                  align=\"center\"\n                >\n                  ID\n                </TableCell>\n                <TableCell align=\"center\">\n                  <NumericField onChange={handleSeats} />\n                </TableCell>\n                <TableCell align=\"center\">\n                  {/* <TextField onChange={handleFeats}/> */}\n                  \n                  2\n                </TableCell>\n              </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer> : <LinearProgress />}\n\n\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n};","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FocusTrap from 'focus-trap-react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport NumericField from '../Numeric';\n\n// Edit Form\n\nconst TriggerButton = ({ buttonRef, showModal }) => {\n  return (\n    <Tooltip title=\"Edit\">\n      <IconButton\n        className=\"btn btn-lg btn-danger center modal-button\"\n        ref={buttonRef}\n        onClick={showModal}>\n        <EditIcon />\n      </IconButton>\n    </Tooltip>\n\n  );\n};\n\nconst EditForm = ({ onSubmit, dataFromParent }) => {\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          '& > :not(style)': { m: 1 },\n        }}\n      >\n        <TextField\n          helperText=\"Edit Waiter Name\"\n          id=\"editingName\"\n          defaultValue={dataFromParent.waiter_name}\n        />\n      </Box>\n      <Button\n        style={{ \n          left: '50%',\n          transform: \"translate(-50%, 0)\" \n        }}\n        variant=\"outlined\"\n        type=\"submit\">\n        Submit\n      </Button>\n      <input type=\"hidden\" id=\"editingId\" name=\"editingId\" \n      value={dataFromParent.waiter_id}></input>\n    </form>\n  );\n};\n\nconst CustomerModal = ({\n  onClickOutside,\n  onKeyDown,\n  modalRef,\n  buttonRef,\n  closeModal,\n  onSubmit,\n  dataFromParent\n}) => {\n  return ReactDOM.createPortal(\n    <FocusTrap>\n      <aside\n        tag=\"aside\"\n        role=\"dialog\"\n        tabIndex=\"-1\"\n        aria-modal=\"true\"\n        className=\"modal-cover\"\n        onClick={onClickOutside}\n        onKeyDown={onKeyDown}\n      >\n        <div className=\"modal-area\" ref={modalRef}>\n          <button\n            ref={buttonRef}\n            aria-label=\"Close Modal\"\n            aria-labelledby=\"close-modal\"\n            className=\"_modal-close\"\n            onClick={closeModal}\n          >\n            <span id=\"close-modal\" className=\"_hide-visual\">\n              Close\n            </span>\n            <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\n              <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n            </svg>\n          </button>\n          <div className=\"modal-body\">\n            <EditForm \n            onSubmit={onSubmit}\n            dataFromParent={dataFromParent}/>\n          </div>\n        </div>\n      </aside>\n    </FocusTrap>,\n    document.body\n  );\n};\n\n\nexport class WaitListEditForm extends Component {\n  state = { isShown: false };\n  showModal = () => {\n    this.setState({ isShown: true }, () => {\n      this.closeButton.focus();\n    });\n    this.toggleScrollLock();\n  };\n  closeModal = () => {\n    this.setState({ isShown: false });\n    this.TriggerButton.focus();\n    this.toggleScrollLock();\n  };\n  onKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n  onClickOutside = (event) => {\n    if (this.modal && this.modal.contains(event.target)) return;\n    this.closeModal();\n  };\n\n  toggleScrollLock = () => {\n    document.querySelector('html').classList.toggle('scroll-lock');\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <TriggerButton\n          showModal={this.showModal}\n          buttonRef={(n) => (this.TriggerButton = n)}\n        />\n        {this.state.isShown ? (\n          <CustomerModal\n            onSubmit={this.props.onSubmit}\n            modalRef={(n) => (this.modal = n)}\n            buttonRef={(n) => (this.closeButton = n)}\n            closeModal={this.closeModal}\n            onKeyDown={this.onKeyDown}\n            onClickOutside={this.onClickOutside}\n            dataFromParent={this.props.dataFromParent}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WaitListEditForm;","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport LinearProgress from '@mui/material/LinearProgress';\nimport WaiterEditForm from \"../Component/EditForms/WaiterEditForm\";\n\n \nfunction createData(waiter_id, waiter_name) {\n  return {\n    waiter_id, \n    waiter_name, \n  };\n}\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\nconst headCells = [\n  {\n    id: \"waiter_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Waiter Number\"\n  },\n  {\n    id: \"waiter_name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Name\"\n  }\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n\n  const \n  { \n    numSelected,\n    selected,\n    rows,setRows,\n    setSelected \n  } = props;\n\n\n\n  const getCurrentData = () => {\n\n    if (selected.length != 1) {\n      return\n    }\n    for (let i=0; i<rows.length; i++) {\n      if (rows[i].waiter_id== selected[0]) {\n        return rows[i]\n      }\n    }\n  };\n\n  const handleDelete = (event) => {\n    let filter = rows.filter((curr) => {\n      if (!selected.includes(curr.waiter_id)) {\n        return true\n      } else {\n        async function remove_Data() {\n          const requestOptions = {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"waiter_id\": curr.waiter_id })\n          }\n          let data=await fetch(\"/api/remove_waiter\", requestOptions)\n          \n          data=data.json()\n          console.log(data)\n        }\n        remove_Data()\n        return false\n      }\n    })\n    setRows(filter)\n    setSelected([])\n  };\n  const handleEdit = (event) => {\n\n    const beforeEdit = getCurrentData()\n\n    let id = document.getElementById(\"editingId\").value\n    let name = document.getElementById(\"editingName\").value || beforeEdit.name\n\n    if (beforeEdit.waiter_id == id) {\n\n      async function updateData() {\n\n        const requestOptions = {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ \n            \"waiter_id\": id,\n            \"waiter_name\": name, \n        })}\n        console.log(\"test\")\n      \n        await fetch(\"/api/update_waiter\", requestOptions)\n      }\n      updateData()\n    }\n\n    \n  };\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n         <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n          <div>\n          {numSelected == 1 && \n            <WaiterEditForm \n              onSubmit={handleEdit}\n              dataFromParent={getCurrentData()}\n              />}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n       </Fragment>\n      ) : (\n        <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h4\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Waiters\n        </Typography>\n          <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [loaded, setLoaded] = React.useState(0);\n  const loadedRef=React.useRef(0)\n\n\n  //insert values\n  const [name, setName] = React.useState(\"\");\n  \n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.waiter_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n\n   const handleWaiterName= (event) => {\n    setName(event.target.value)\n   };\n\n\n   const handleSubmit= (event) => {\n    console.log(name,\"we need to submit this to db\")\n    async function postData(){\n      let post= await fetch(\n        \"/api/add_waiter\",{\n          method:'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body:JSON.stringify({\n            name:name\n            })\n        })\n        post=await post.json()\n        console.log(\"Customer Insert\",post)\n        if (post.output==true){\n          loadedRef.current=loadedRef.current+1\n          get_Data()\n        }\n\n    }\n    postData()\n   };\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    async function get_Data(){\n      let data=await fetch(\"/api/get_waiters\")\n      data=await data.json()\n      if(!data.error){\n        loadedRef.current=loadedRef.current+1\n        setRows(data)\n      }\n    }\n    React.useEffect(() => {\n      get_Data()\n    },[]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n      if(loadedRef.current==1){\n        setLoaded(true)\n      }\n      else if(loadedRef.current>1){\n        setPage(Math.floor((rows.length-1)/rowsPerPage))\n\n        setLoaded(true)\n      }\n    },[rows]);\n    \n    React.useEffect(() => {\n      setItems(getItems())\n    },[page]);\n\n  \n\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        {loaded ? <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.waiter_id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.waiter_id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.waiter_id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.waiter_id}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.waiter_name}</TableCell>\n                    </TableRow>\n\n                  );\n                })}\n                {/*Add Element Row*/}\n               <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      ID\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <TextField onChange={handleWaiterName}/> \n                      </TableCell>\n                    </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer> : <LinearProgress />}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}\nexport{createData}","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TimePicker from '@mui/lab/TimePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateAdapter from '@mui/lab/AdapterDateFns';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CurrencyTextField from '@kylebeikirch/material-ui-currency-textfield'\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\nconst headCells = [\n  {\n    id: \"visits_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Visits ID\"\n  },\n  {\n    id: \"table_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Table ID\"\n  },\n  {\n    id: \"customer_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Customer ID\"\n  },\n  {\n    id: \"waiter_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Waiter ID\"\n  },\n  {\n    id: \"numGuest\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Guest Count\"\n  },\n  {\n    id: \"timeStart\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Start Time\"\n  },\n  {\n    id: \"timeEnd\",\n    numeric: true,\n    disablePadding: false,\n    label: \"End Time\"\n  },\n  {\n    id: \"checkAmount\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Check Amount\"\n  },\n\n  {\n    id: \"tipsAmount\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Tips Amount\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const {\n    numSelected,\n    rows,\n    selected,\n    setRows,\n    setSelected\n  } = props;\n  const handleDelete = (event) => {\n\n    event.preventDefault()\n    // console.log(rows)\n    console.log(selected)\n    let filter = rows.filter((curr) => {\n      // console.log(\"curr\", curr)\n      if (!selected.includes(curr.visit_id)) {\n        return true\n      } else {\n        async function remove_Data() {\n          const requestOptions = {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"visit_id\": curr.visit_id })\n          }\n          // console.log(\"requestOptions\", requestOptions)\n          let data=await fetch(\"/api/remove_visit\", requestOptions)\n          data=await data.json()\n          console.log(data)\n\n          return false\n        }\n        remove_Data()\n      }\n    })\n    setRows(filter)\n    setSelected([])\n  }\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Fragment>\n          <Typography\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n            }}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {numSelected} selected\n          </Typography>\n          <div>\n            {/* {numSelected == 1 && <Tooltip title=\"Edit\">\n              <IconButton>\n                <EditIcon />\n              </IconButton>\n            </Tooltip>} */}\n            <Tooltip title=\"Delete\">\n              <IconButton onClick={handleDelete}>\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Typography\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n            }}\n            variant=\"h4\"\n            id=\"tableTitle\"\n            component=\"div\"\n          >\n            Visits\n          </Typography>\n          <Tooltip title=\"Filter list\">\n            <IconButton>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [loaded, setLoaded] = React.useState(false);\n  let loadedRef = React.useRef(0)\n\n  const [loaded2, setLoaded2] = React.useState(false);\n\n\n  const [customersNames, setCustomersNames] = React.useState([]);\n  const [waitersNames, setWaitersNames] = React.useState([]);\n  const [UTCStart, setUTCStart] = React.useState(new Date());\n  const [UTCEnd, setUTCEnd] = React.useState(new Date());\n  const [tablesList, setTablesList] = React.useState([]);\n\n  //insert values\n  const [numGuest, setNumGuest] = React.useState(0);\n  const [startTime, setStartTime] = React.useState(\"\");\n  const [endTime, setEndTime] = React.useState(\"\");\n  const [customerID, setCustomerID] = React.useState([]);\n  const [waiterID, setWaiterID] = React.useState([]);\n  const [check, setCheck] = React.useState(0);\n  const [tip, setTips] = React.useState(0);\n  const [tableID, setTable] = React.useState();\n\n\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.visit_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n\n  const handleCustomers = (event, newValue) => {\n    setCustomerID(newValue.id)\n  };\n\n\n  const handleWaiters = (event, newValue) => {\n    setWaiterID(newValue.id)\n  };\n\n  const handleTable = (event, newValue) => {\n    setTable(newValue.id)\n  };\n\n\n  const handleStartTime = (newValue) => {\n    setUTCStart(newValue)\n  };\n\n  const handleEndTime = (newValue) => {\n    setUTCEnd(newValue)\n  };\n\n\n  const handleNumGuest = (event) => {\n    setNumGuest(event.target.value)\n  };\n\n\n\n\n\n  const handleSubmit = (event) => {\n    console.log(customerID, waiterID, numGuest, startTime, endTime, check, tip, tableID)\n    async function postData() {\n      let post = await fetch(\n        \"/api/add_visit\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          customer_id: customerID,\n          waiter_id: waiterID,\n          num_guest: numGuest,\n          time_start: startTime,\n          time_stop: endTime,\n          check_amount: check,\n          tips_amount: tip,\n          table_id: tableID\n        })\n      })\n      post = await post.json()\n      console.log(\"Visit Insert\", post)\n      if (post.output == true) {\n        get_Data()\n      }\n\n    }\n    postData()\n\n  };\n\n\n  const handleCheck = (event) => {\n    setCheck(event.target.value)\n  };\n\n  const handleTip = (event) => {\n    setTips(event.target.value)\n  };\n\n\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  async function get_Data() {\n    let data = await fetch(\"/api/get_visits\")\n    data = await data.json()\n    // console.log(data)\n    if (!data.error) {\n      loadedRef.current = loadedRef.current + 1\n      setRows(data)\n    }\n\n\n    let data2 = await fetch(\"/api/get_customers\")\n    data2 = await data2.json()\n    if (!data2.error) {\n      setCustomersNames(data2)\n    }\n\n    let data3 = await fetch(\"/api/get_waiters\")\n    data3 = await data3.json()\n    if (!data3.error) {\n      setWaitersNames(data3)\n    }\n\n    let data4 = await fetch(\"/api/get_diningtables\")\n    data4 = await data4.json()\n    if (!data4.error) {\n\n      setTablesList(data4)\n    }\n    setLoaded2(true)\n\n\n  }\n\n  React.useEffect(() => {\n\n    get_Data()\n\n  }, []);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [rowsPerPage]);\n\n  React.useEffect(() => {\n    setItems(getItems())\n    if (loadedRef.current == 1) {\n      setLoaded(true)\n    }\n    else if (loadedRef.current > 1) {\n      setPage(Math.floor((rows.length - 1) / rowsPerPage))\n      setLoaded(true)\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n\n  }, [tablesList]);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [page]);\n\n  React.useEffect(() => {\n    setStartTime(UTCStart.getTime())\n  }, [UTCStart]);\n\n  React.useEffect(() => {\n    setEndTime(UTCEnd.getTime())\n  }, [UTCEnd]);\n\n\n\n\n\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected} />\n        {loaded ? <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n\n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                const isItemSelected = isSelected(row.visit_id);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hoverT\n                    onClick={(event) => handleClick(event, row.visit_id)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.visit_id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          \"aria-labelledby\": labelId\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell\n                      component=\"th\"\n                      id={labelId}\n                      scope=\"row\"\n                      padding=\"none\"\n                      align=\"center\"\n                    >\n                      {row.visit_id}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.table_id}</TableCell>\n                    <TableCell align=\"center\">{row.customer_id}</TableCell>\n                    <TableCell align=\"center\">{row.waiter_id}</TableCell>\n                    <TableCell align=\"center\">{row.num_guest}</TableCell>\n                    <TableCell align=\"center\">\n                      {new Date(row.time_start).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {new Date(row.time_stop).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.check_amount.toFixed(2)}</TableCell>\n                    <TableCell align=\"center\">{row.tips_amount.toFixed(2)}</TableCell>\n\n\n\n\n                  </TableRow>\n\n                );\n              })}\n              {/*Add Element Row*/}\n              {loaded2 ? <TableRow\n                hoverT\n              >\n                <TableCell>\n                  <IconButton className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                    <AddBoxIcon />\n                  </IconButton>\n                </TableCell>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"none\"\n                  align=\"center\"\n                >\n                  ID\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Autocomplete\n                    disablePortal\n                    id=\"combo-box\"\n                    onChange={handleTable}\n                    isOptionEqualToValue={(option, value) => option.value === value.value}\n                    options={\n                      tablesList.map((item, index) => {\n                        return { \"label\": item.table_id.toString(), \"id\": item.table_id }\n                      })\n                    }\n                    sx={{ width: 150 }}\n                    renderInput={(params) => <TextField {...params} label=\"Tables\" />}\n                  />\n\n\n\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Autocomplete\n                    disablePortal\n                    id=\"combo-box\"\n                    onChange={handleCustomers}\n                    isOptionEqualToValue={(option, value) => option.value === value.value}\n\n                    options={\n                      customersNames.map((item, index) => {\n                        return { \"label\": item.customer_name, \"id\": item.customer_id }\n                      })\n                    }\n                    sx={{ width: 150 }}\n                    renderInput={(params) => <TextField {...params} label=\"Customers\" />}\n                  />\n\n\n\n                </TableCell>\n                <TableCell align=\"center\">\n\n                  <Autocomplete\n                    disablePortal\n                    id=\"combo-box\"\n                    onChange={handleWaiters}\n                    isOptionEqualToValue={(option, value) => option.value === value.value}\n\n                    options={\n                      waitersNames.map((item, index) => {\n                        return { \"label\": item.waiter_name, \"id\": item.waiter_id }\n                      })\n                    }\n                    sx={{ width: 150 }}\n                    renderInput={(params) => <TextField {...params} label=\"Waiters\" />}\n                  />\n\n\n\n                </TableCell>\n                <TableCell align=\"center\">\n                  <NumericField onChange={handleNumGuest} />\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  <LocalizationProvider dateAdapter={DateAdapter}>\n                    <TimePicker\n                      label=\"Time\"\n                      value={UTCStart}\n                      onChange={handleStartTime}\n                      renderInput={(params) => <TextField {...params} />}\n                    />\n                  </LocalizationProvider>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <LocalizationProvider dateAdapter={DateAdapter}>\n                    <TimePicker\n                      label=\"Time\"\n                      value={UTCEnd}\n                      onChange={handleEndTime}\n                      renderInput={(params) => <TextField {...params} />}\n                    />\n                  </LocalizationProvider>\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  <CurrencyTextField\n                    label=\"Check\"\n                    variant=\"outlined\"\n                    value={check}\n                    currencySymbol=\"$\"\n                    minimumValue=\"0\"\n                    outputFormat=\"number\"\n                    decimalCharacter=\".\"\n                    digitGroupSeparator=\",\"\n                    onChange={handleCheck}\n                  />\n                </TableCell>\n                <TableCell align=\"center\">\n                  <CurrencyTextField\n                    label=\"Tips\"\n                    variant=\"outlined\"\n                    value={tip}\n                    currencySymbol=\"$\"\n                    minimumValue=\"0\"\n                    outputFormat=\"number\"\n                    decimalCharacter=\".\"\n                    digitGroupSeparator=\",\"\n                    onChange={handleTip}\n                    decimalPlaces=\"2\"\n                  />\n                </TableCell>\n\n\n\n              </TableRow>:<div/>}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer> : <LinearProgress />}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}","\nimport { Fragment } from \"react\";\n\nfunction Home() {\n    return (\n        <Fragment>\n            \n            <h1>This is a home Page</h1>\n            <h1>Checkout Those Links</h1>\n        </Fragment>\n    )\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport {\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    textDecoration: \"none\",\n    color: \"blue\",\n    fontSize: \"20px\",\n  },\n  icon: {\n    color: \"white\"\n  }\n}));\n\nfunction DrawerComponent() {\n  const classes = useStyles();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <>\n      <Drawer\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/\" className={\"link\"}>Home</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/diningtables\" className={\"link\"}>Dining Tables</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/customers\" className={\"link\"}>Customers</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/waitlist\" className={\"link\"}>Waitlist</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/waiters\" className={\"link\"}>Waiters</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/visits\" className={\"link\"}>Visits</Link>\n            </ListItemText>\n          </ListItem>\n        </List>\n      </Drawer>\n      <IconButton onClick={() => setOpenDrawer(!openDrawer)}>\n        <MenuIcon />\n      </IconButton>\n    </>\n  );\n}\nexport default DrawerComponent;","import React from \"react\";\nimport {\n    AppBar,\n    Toolbar,\n    CssBaseline,\n    Typography,\n    makeStyles,\n    useTheme,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport DrawerComponent from \"./Drawer\";\n\nconst useStyles = makeStyles((theme) => ({\n    navlinks: {\n        marginLeft: theme.spacing(5),\n        display: \"flex\",\n    },\n    logo: {\n        flexGrow: \"1\",\n        cursor: \"pointer\",\n    },\n}));\n\nfunction MenuBar() {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n    return (\n        <AppBar position=\"static\">\n            <CssBaseline />\n            <Toolbar>\n                <Typography variant=\"h4\" className={classes.logo}>\n                    Restaurant Management System\n                </Typography>\n                {isMobile ? (\n                    <DrawerComponent />\n                ) : (\n\n\n                    <div className={classes.navlinks}>\n                        <Link to=\"/\" className={\"link\"}>\n                            Home\n                        </Link>\n                        <Link to=\"/diningtables\" className={\"link\"}>\n                            Dining Tables\n                        </Link>\n                        <Link to=\"/customers\" className={\"link\"}>\n                            Customers\n                        </Link>\n                        <Link to=\"/Waitlist\" className={\"link\"}>\n                            Waitlist\n                        </Link>\n                        <Link to=\"/Waiters\" className={\"link\"}>\n                            Waiters\n                        </Link>\n                        <Link to=\"/Visits\" className={\"link\"}>\n                            Visits\n                        </Link>\n                    </div>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n}\nexport default MenuBar;\n","import './style.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport Waitlist from \"./Pages/Waitlist\";\nimport Customers from './Pages/Customers';\nimport DiningTables from './Pages/DiningTables';\nimport Waiters from './Pages/Waiters';\nimport Visits from './Pages/Visits';\nimport Home from './Pages/Home';\nimport Menubar from './Component/Menubar';\n\nfunction App() {\n  return (\n    <Router>\n      <Menubar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/waitlist\" component={Waitlist} />\n        <Route path=\"/customers\" component={Customers} />\n        <Route path=\"/diningtables\" component={DiningTables} />\n        <Route path=\"/waiters\" component={Waiters} />\n        <Route path=\"/visits\" component={Visits} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}