{"version":3,"sources":["Component/Numeric.js","Component/EditForms/WaitListEditForm.js","Pages/Waitlist.js","Component/Phone.js","Component/EditForms/CustomerEditForm.js","Pages/Customers.js","Component/EditForms/DiningTableEditForm.js","Pages/DiningTables.js","Component/EditForms/WaiterEditForm.js","Pages/Waiters.js","Pages/Visits.js","Pages/Home.js","Component/Drawer.js","Component/Menubar.js","App.js","index.js"],"names":["NumericField","props","onKeyPress","onChange","onInput","max","min","others","Number","MAX_SAFE_INTEGER","TextField","type","inputProps","event","console","log","which","preventDefault","alert","value","parseInt","target","TriggerButton","buttonRef","showModal","Tooltip","title","IconButton","className","ref","onClick","EditForm","onSubmit","dataFromParent","Box","sx","display","alignItems","m","Numeric","helperText","id","defaultValue","num_seat","Button","style","left","transform","variant","name","queue_id","CustomerModal","onClickOutside","onKeyDown","modalRef","closeModal","ReactDOM","createPortal","tag","role","tabIndex","viewBox","d","document","body","WaitListEditForm","state","isShown","setState","closeButton","focus","toggleScrollLock","keyCode","modal","contains","querySelector","classList","toggle","Fragment","this","n","Component","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","label","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","color","indeterminate","checked","map","headCell","align","sortDirection","TableSortLabel","active","direction","property","component","visuallyHidden","EnhancedTableToolbar","rows","selected","setRows","setSelected","getCurrentData","length","i","Toolbar","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","Typography","beforeEdit","getElementById","customer","is_seat","time","request","waiter_id","updateData","requestOptions","method","headers","JSON","stringify","fetch","filter","curr","includes","remove_Data","DiningTables","React","setOrder","setOrderBy","page","setPage","dense","rowsPerPage","setRowsPerPage","items","setItems","customerNames","setCustomersNames","Date","local","setLocal","loaded","setLoaded","loadedRef","customer_id","setcustomer_id","setTime","seated","setSeated","setNum_seat","setRequests","getItems","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","emptyRows","Math","get_Data","data","json","error","data2","unshift","current","floor","getTime","width","Paper","mb","TableContainer","Table","minWidth","size","newSelecteds","TableBody","row","isItemSelected","indexOf","labelId","hoverT","selectedIndex","newSelected","concat","handleClick","scope","reserved_time","toLocaleTimeString","hour","minute","requested_feature_id","is_seated","fontSize","post","output","postData","Autocomplete","disablePortal","newValue","isOptionEqualToValue","option","options","item","customer_name","renderInput","params","LocalizationProvider","dateAdapter","DateAdapter","TimePicker","FormControl","fullWidth","InputLabel","Select","MenuItem","height","colSpan","LinearProgress","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","PhoneField","handleKeyPress","handleInput","maxLength","Phone","customer_phone","CustomerEditForm","phone","CustomerTables","rowsOfCustomers","useState","useRef","setName","setPhone","useEffect","getData","isSelected","addData","window","location","reload","feature_id","table_id","DiningTableModel","DiningTableEditForm","refreshPage","tableId","numSeat","featureId","loadRef","setSeats","waiter_name","WaiterEditForm","visit_id","customersNames","waitersNames","setWaitersNames","UTCStart","setUTCStart","UTCEnd","setUTCEnd","tablesList","setTablesList","numGuest","setNumGuest","startTime","setStartTime","endTime","setEndTime","customerID","setCustomerID","waiterID","setWaiterID","check","setCheck","tip","setTips","tableID","setTable","data3","data4","num_guest","time_start","time_stop","check_amount","toFixed","tips_amount","toString","currencySymbol","minimumValue","outputFormat","decimalCharacter","digitGroupSeparator","decimalPlaces","Home","useStyles","makeStyles","link","textDecoration","icon","DrawerComponent","openDrawer","setOpenDrawer","Drawer","open","onClose","List","ListItem","ListItemText","to","navlinks","marginLeft","spacing","logo","flexGrow","cursor","MenuBar","classes","useTheme","isMobile","useMediaQuery","breakpoints","down","AppBar","position","CssBaseline","App","Menubar","exact","path","Waitlist","Customers","Waiters","Visits","from","render","StrictMode"],"mappings":"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","file":"static/js/main.2bd79ca7.chunk.js","sourcesContent":["import React from \"react\";\nimport {  TextField } from \"@mui/material\";\n\nfunction NumericField(props) {\n   \n    let{onKeyPress,onChange,onInput,max,min,...others}=props\n\n    onKeyPress=onKeyPress||function(){}\n    onChange=onChange||function(){}\n    onInput=onInput||function(){}\n    max=max||Number.MAX_SAFE_INTEGER \n    min=min||0\n    //handle inproper values \n    const handleKeyPress = (event) => {\n        console.log(event.which)\n        if (event.which != 8 && event.which != 13 && event.which != 0 && !(event.which >= 48 && event.which <= 57)) {\n            event.preventDefault()\n            alert(\"Invalid input:Please Enter A number\")\n        }\n    };\n\n    const handleInput = (event) => {\n        let value = parseInt(event.target.value)\n        if (value !== value) {\n            return\n        }\n        if (value < min) {\n            alert(`Out of Range:${min}-${max}`)\n            event.target.value = min\n            return\n        }\n\n        if (value > max) {\n            alert(\"Out of Range\")\n            event.target.value = max\n            return\n        }\n    };\n\n\n\n\n    return (\n        <TextField type=\"number\" inputProps={{ onKeyPress: handleKeyPress, onInput: handleInput }} onChange={onChange} max={max} min={min} {...others}></TextField>\n    );\n}\n\nexport default NumericField;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FocusTrap from 'focus-trap-react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport NumericField from '../Numeric';\n\n// Edit Form\n\nconst TriggerButton = ({ buttonRef, showModal }) => {\n  return (\n    <Tooltip title=\"Edit\">\n      <IconButton\n        className=\"btn btn-lg btn-danger center modal-button\"\n        ref={buttonRef}\n        onClick={showModal}>\n        <EditIcon />\n      </IconButton>\n    </Tooltip>\n\n  );\n};\n\nconst EditForm = ({ onSubmit, dataFromParent }) => {\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          '& > :not(style)': { m: 1 },\n        }}\n      >\n        <NumericField \n          helperText=\"Edit Seat Count\"\n          id=\"editingNumSeat\"\n          defaultValue={dataFromParent.num_seat}\n        />\n      </Box>\n      <Button\n        style={{ \n          left: '50%',\n          transform: \"translate(-50%, 0)\" \n        }}\n        variant=\"outlined\"\n        type=\"submit\">\n        Submit\n      </Button>\n      <input type=\"hidden\" id=\"editingId\" name=\"editingId\" \n      value={dataFromParent.queue_id}></input>\n    </form>\n  );\n};\n\nconst CustomerModal = ({\n  onClickOutside,\n  onKeyDown,\n  modalRef,\n  buttonRef,\n  closeModal,\n  onSubmit,\n  dataFromParent\n}) => {\n  return ReactDOM.createPortal(\n    <FocusTrap>\n      <aside\n        tag=\"aside\"\n        role=\"dialog\"\n        tabIndex=\"-1\"\n        aria-modal=\"true\"\n        className=\"modal-cover\"\n        onClick={onClickOutside}\n        onKeyDown={onKeyDown}\n      >\n        <div className=\"modal-area\" ref={modalRef}>\n          <button\n            ref={buttonRef}\n            aria-label=\"Close Modal\"\n            aria-labelledby=\"close-modal\"\n            className=\"_modal-close\"\n            onClick={closeModal}\n          >\n            <span id=\"close-modal\" className=\"_hide-visual\">\n              Close\n            </span>\n            <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\n              <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n            </svg>\n          </button>\n          <div className=\"modal-body\">\n            <EditForm \n            onSubmit={onSubmit}\n            dataFromParent={dataFromParent}/>\n          </div>\n        </div>\n      </aside>\n    </FocusTrap>,\n    document.body\n  );\n};\n\n\nexport class WaitListEditForm extends Component {\n  state = { isShown: false };\n  showModal = () => {\n    this.setState({ isShown: true }, () => {\n      this.closeButton.focus();\n    });\n    this.toggleScrollLock();\n  };\n  closeModal = () => {\n    this.setState({ isShown: false });\n    this.TriggerButton.focus();\n    this.toggleScrollLock();\n  };\n  onKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n  onClickOutside = (event) => {\n    if (this.modal && this.modal.contains(event.target)) return;\n    this.closeModal();\n  };\n\n  toggleScrollLock = () => {\n    document.querySelector('html').classList.toggle('scroll-lock');\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <TriggerButton\n          showModal={this.showModal}\n          buttonRef={(n) => (this.TriggerButton = n)}\n        />\n        {this.state.isShown ? (\n          <CustomerModal\n            onSubmit={this.props.onSubmit}\n            modalRef={(n) => (this.modal = n)}\n            buttonRef={(n) => (this.closeButton = n)}\n            closeModal={this.closeModal}\n            onKeyDown={this.onKeyDown}\n            onClickOutside={this.onClickOutside}\n            dataFromParent={this.props.dataFromParent}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WaitListEditForm;","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\nimport { Select } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { InputLabel } from \"@mui/material\";\nimport { FormControl } from \"@mui/material\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TimePicker from '@mui/lab/TimePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateAdapter from '@mui/lab/AdapterDateFns';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport WaitListEditForm from \"../Component/EditForms/WaitListEditForm.js\"\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n//[{ \"queue_id\": 1, \"customer_id\": 1, \"numberseat\": 8, \"time\": \"8:30pm\", \"request\": \"null\", \"seated\": \"false\" }]\nconst headCells = [\n  {\n    id: \"queue_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Queue Number\"\n  },\n  {\n    id: \"customer_id\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Customer Number\"\n  },\n  {\n    id: \" num_seat\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Total Seats\"\n  },\n  {\n    id: \"rserved_time\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Reserve Time\"\n  },\n  {\n    id: \"requested_feature_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Request ID\"\n  },\n  {\n    id: \"seated\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Seated ?\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const {\n    numSelected,\n    rows,\n    selected,\n    setRows,\n    setSelected\n  } = props;\n\n\n  const getCurrentData = () => {\n\n    if (selected.length != 1) {\n      return\n    }\n    for (let i=0; i<rows.length; i++) {\n      if (rows[i].queue_id== selected[0]) {\n        return rows[i]\n      }\n    }\n  };\n\n  const handleEdit = (event) => {\n\n    const beforeEdit = getCurrentData()\n\n    let id = document.getElementById(\"editingId\").value\n    let customer = document.getElementById(\"editingCustomer\").value || beforeEdit.name\n    let is_seat = document.getElementById(\"editingSeatBool\").value || beforeEdit.name\n    let time = document.getElementById(\"editingTime\").value || beforeEdit.name\n    let request= document.getElementById(\"editingFeature\").value || beforeEdit.name\n    let num_seat= document.getElementById(\"editingNumSeat\").value || beforeEdit.name\n\n    if (beforeEdit.waiter_id == id) {\n\n      async function updateData() {\n\n        const requestOptions = {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ \n            \"queue_id\": id,\n            \"is_seated\":is_seat===\"True\",\n            \"customer_id\":customer,\n            \"reserved_time\":time,\n            \"requested_feature_id\":request,\n            \"num_seat\":num_seat\n\n        })}\n      \n        await fetch(\"/api/update_waiter\", requestOptions)\n      }\n      updateData()\n    }\n\n    \n  };\n  const handleDelete = (event) => {\n    let filter = rows.filter((curr) => {\n      if (!selected.includes(curr.queue_id)) {\n        return true\n      } else {\n        async function remove_Data() {\n          const requestOptions = {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"queue_id\": curr.queue_id })\n          }\n          await fetch(\"/api/remove_waitinglist\", requestOptions)\n        }\n        remove_Data()\n        return false\n      }\n    })\n    setRows(filter)\n    setSelected([])\n  };\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n         <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n          <div>\n          {numSelected == 1 && \n            <WaitListEditForm \n              onSubmit={handleEdit}\n              dataFromParent={getCurrentData()}\n              />}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n       </Fragment>\n      ) : (\n        <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h4\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Waitlist\n        </Typography>\n          <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [customerNames, setCustomersNames] = React.useState([]);\n  const [local, setLocal] = React.useState(new Date());\n  const [loaded, setLoaded] = React.useState(false);\n  const loadedRef=React.useRef(0)\n\n\n  //insert values\n  const [customer_id, setcustomer_id] = React.useState(0);\n  const [time, setTime] = React.useState(\"\");\n  const [seated, setSeated] = React.useState(\"\");\n  const [ num_seat, setNum_seat] = React.useState(0);\n  const [request, setRequests] = React.useState(\"\");\n  \n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.queue_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n\n  const handleCustomers= (event,newValue) => {\n   setcustomer_id(newValue.id)\n  };\n\n  const handleSeatsCount= (event) => {\n    setNum_seat(event.target.value)\n   };\n\n   const handleTime= (newValue) => {\n    setLocal(newValue)\n   };\n\n   const handleRequests= (event) => {\n    setRequests(event.target.value)\n   };\n\n   const handleSeated= (event) => {\n    setSeated(event.target.value)\n   };\n\n   const handleSubmit= (event) => {\n    async function postData(){\n      let post= await fetch(\n        \"/api/add_waitinglist\",{\n          method:'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body:JSON.stringify({\n            is_seated:seated===\"True\",\n            customer_id:customer_id,\n            reserved_time:time,\n            requested_feature_id:request,\n            num_seat:num_seat\n\n            })\n        })\n        post=await post.json()\n        console.log(\"Customer Insert\",post)\n        if (post.output==true){\n          get_Data()\n        }\n\n    }\n    postData()\n   \n    }\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    async function get_Data(){\n      let data=await fetch(\"/api/get_waitlist\")\n      data=await data.json()\n      // console.log(data)\n      if(!data.error){\n        setRows(data)\n      }\n    \n\n      let data2=await fetch(\"/api/get_customers\") \n      data2= await data2.json()\n      if(!data2.error){\n        console.log(data2)\n        data2.unshift({\"customer_id\":\"null\",\"customer_name\":\"null\"})\n        loadedRef.current=loadedRef.current+1\n        setCustomersNames(data2)\n      }\n\n\n    }\n    React.useEffect(() => {\n      get_Data()\n    },[]);\n\n\n\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n      if(loadedRef.current==1){\n        setLoaded(true)\n      }\n      else if(loadedRef.current>1){\n        setPage(Math.floor((rows.length-1)/rowsPerPage))\n        setLoaded(true)\n      }\n    },[rows]);\n\n    React.useEffect(() => {\n      if(loadedRef.current){\n        setLoaded(true)\n      }\n    },[customerNames]);\n    \n    React.useEffect(() => {\n      setItems(getItems())\n    },[page]);\n\n    React.useEffect(() => {\n      setTime(local.getTime())\n    },[local]);\n\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        {loaded ? <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.queue_id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.queue_id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.queue_id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.queue_id}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.customer_id}</TableCell>\n                      <TableCell align=\"center\">{row. num_seat}</TableCell>\n                      <TableCell align=\"center\">{new Date(row.reserved_time).toLocaleTimeString([],{ hour: '2-digit', minute: '2-digit' })}</TableCell>\n                      <TableCell align=\"center\">{row.requested_feature_id}</TableCell>\n                      <TableCell align=\"center\">{`${row.is_seated==1}`}</TableCell>\n\n\n                    </TableRow>\n\n                  );\n                })}\n                {/*Add Element Row*/}\n               <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      ID\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Autocomplete\n                      disablePortal\n                 id=\"combo-box\"\n                 onChange={handleCustomers}\n                 isOptionEqualToValue={(option, value) => option.value === value.value}\n                  options={\n                  customerNames.map((item,index)=>{\n                  return {\"label\":item.customer_name,\"id\":item.customer_id}\n                  })\n                  }\n                  sx={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Customers\" />}\n    />\n                      \n                      \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <NumericField onChange={handleSeatsCount}/>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <LocalizationProvider dateAdapter={DateAdapter}>\n                      <TimePicker\n                      label=\"Time\"\n                      value={local}\n                      onChange={handleTime}\n                      renderInput={(params) => <TextField {...params} />}\n                      />\n                      </LocalizationProvider>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <TextField onChange={handleRequests}/> \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <FormControl fullWidth>\n\n                      <InputLabel>Seated</InputLabel>\n\n                      <Select\n                 value={seated}\n             onChange={handleSeated}\n                >\n    <MenuItem value={'True'}>True</MenuItem>\n    <MenuItem value={'False'}>False</MenuItem>\n\n  </Select>\n  </FormControl>\n\n    \n                      </TableCell>\n                      \n\n                    </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer> :  <LinearProgress />}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}","import React from \"react\";\nimport { getDialogActionsUtilityClass, TextField } from \"@mui/material\";\n\nfunction PhoneField(...props) {\n\n\n \n\n \n\n\n  // let onKeyPress=props.onKeypress||function(){}\n  // let onInput=props.onInput||function(){}\n  let max=props.max||Number.MAX_SAFE_INTEGER \n  let min=props.min||0\n  let onChange=props.onChange||function(){}\n  //handle inproper values \n  const handleKeyPress = (event) => {\n    if (event.target.value.length == 3 || event.target.value.length == 7) {\n      if (event.which != 45) {\n        event.preventDefault()\n        alert(\"Invalid input:Format 789-789-7777\")\n      }\n    }\n    else {\n\n      if (event.which != 8 && event.which != 13 && event.which != 0 && !(event.which >= 48 && event.which <= 57)) {\n        event.preventDefault()\n        alert(\"Invalid input:Format 789-789-7777\")\n      }\n    }\n\n\n\n  };\n\n  const handleInput = (event) => {\n    let value = parseInt(event.target.value)\n    if (value !== value) {\n      return\n    }\n    if (value < min) {\n      alert(\"Out of Range\")\n      event.target.value = min\n      return\n    }\n\n    if (value > max) {\n      alert(\"Out of Range\")\n      event.target.value = max\n      return\n    }\n  };\n\n\n\n\n  return (\n    <TextField type=\"tel\" inputProps={{ onKeyPress: handleKeyPress, onInput: handleInput, maxLength: 12 }} onChange={onChange}></TextField>\n  );\n}\n\nexport default PhoneField;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FocusTrap from 'focus-trap-react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhoneField from '../Phone';\n\n\n// Edit Form\n\nconst TriggerButton = ({ buttonRef, showModal }) => {\n  return (\n    <Tooltip title=\"Edit\">\n      <IconButton\n        className=\"btn btn-lg btn-danger center modal-button\"\n        ref={buttonRef}\n        onClick={showModal}>\n        <EditIcon />\n      </IconButton>\n    </Tooltip>\n\n  );\n};\n\nconst EditForm = ({ onSubmit, dataFromParent }) => {\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          '& > :not(style)': { m: 1 },\n        }}\n      >\n        <TextField\n          helperText=\"Edit the name\"\n          id=\"editingName\"\n          defaultValue={dataFromParent.customer_name}\n        />\n        <PhoneField\n          helperText=\"Edit the phone number\"\n          id=\"editingPhone\"\n          defaultValue={dataFromParent.customer_phone}\n        />\n      </Box>\n      <Button\n        style={{ \n          left: '50%',\n          transform: \"translate(-50%, 0)\" \n        }}\n        variant=\"outlined\"\n        type=\"submit\">\n        Submit\n      </Button>\n      <input type=\"hidden\" id=\"editingId\" name=\"editingId\" \n      value={dataFromParent.customer_id}></input>\n    </form>\n  );\n};\n\nconst CustomerModal = ({\n  onClickOutside,\n  onKeyDown,\n  modalRef,\n  buttonRef,\n  closeModal,\n  onSubmit,\n  dataFromParent\n}) => {\n  return ReactDOM.createPortal(\n    <FocusTrap>\n      <aside\n        tag=\"aside\"\n        role=\"dialog\"\n        tabIndex=\"-1\"\n        aria-modal=\"true\"\n        className=\"modal-cover\"\n        onClick={onClickOutside}\n        onKeyDown={onKeyDown}\n      >\n        <div className=\"modal-area\" ref={modalRef}>\n          <button\n            ref={buttonRef}\n            aria-label=\"Close Modal\"\n            aria-labelledby=\"close-modal\"\n            className=\"_modal-close\"\n            onClick={closeModal}\n          >\n            <span id=\"close-modal\" className=\"_hide-visual\">\n              Close\n            </span>\n            <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\n              <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n            </svg>\n          </button>\n          <div className=\"modal-body\">\n            <EditForm \n            onSubmit={onSubmit}\n            dataFromParent={dataFromParent}/>\n          </div>\n        </div>\n      </aside>\n    </FocusTrap>,\n    document.body\n  );\n};\n\n\nclass CustomerEditForm extends Component {\n  state = { isShown: false };\n  showModal = () => {\n    this.setState({ isShown: true }, () => {\n      this.closeButton.focus();\n    });\n    this.toggleScrollLock();\n  };\n  closeModal = () => {\n    this.setState({ isShown: false });\n    this.TriggerButton.focus();\n    this.toggleScrollLock();\n  };\n  onKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n  onClickOutside = (event) => {\n    if (this.modal && this.modal.contains(event.target)) return;\n    this.closeModal();\n  };\n\n  toggleScrollLock = () => {\n    document.querySelector('html').classList.toggle('scroll-lock');\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <TriggerButton\n          showModal={this.showModal}\n          buttonRef={(n) => (this.TriggerButton = n)}\n        />\n        {this.state.isShown ? (\n          <CustomerModal\n            onSubmit={this.props.onSubmit}\n            modalRef={(n) => (this.modal = n)}\n            buttonRef={(n) => (this.closeButton = n)}\n            closeModal={this.closeModal}\n            onKeyDown={this.onKeyDown}\n            onClickOutside={this.onClickOutside}\n            dataFromParent={this.props.dataFromParent}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CustomerEditForm;","import React, { Component } from 'react';\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport ReactDOM from 'react-dom';\nimport FocusTrap from 'focus-trap-react';\nimport Button from '@mui/material/Button';\n\nimport CustomerEditForm from \"../Component/EditForms/CustomerEditForm.js\"\nimport NumericField from \"../Component/Numeric\";\nimport PhoneField from \"../Component/Phone\";\n\nimport { customerData } from \"../DatabaseTest\";\nimport { Pages } from \"@material-ui/icons\";\nimport { WindowSharp } from \"@mui/icons-material\";\nimport { LinearProgress } from '@mui/material';\n\n\nfunction refreshPage() {\n  window.location.reload();\n}\n\nfunction createData(customer_id, name, phone) {\n  return {\n    customer_id,\n    name,\n    phone,\n  };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getNextId(rowsOfCustomers) {\n\n  if (rowsOfCustomers.length > 0) {\n    return rowsOfCustomers[rowsOfCustomers.length - 1].customer_id + 1\n  } else {\n    return '?'\n  }\n}\nconst headCells = [\n  {\n    id: \"customer_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Customer Number\"\n  },\n  {\n    id: \"customer_name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Name\"\n  },\n  {\n    id: \"customer_phone\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Phone Number\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const { numSelected } = props;\n  const { selected } = props;\n  const { rows } = props;\n  const { setRows } = props;\n  const { setSelected } = props;\n  const handleDelete = (event) => {\n    let filter = rows.filter((curr) => {\n      if (!selected.includes(curr.customer_id)) {\n        return true\n      } else {\n        async function remove_Data() {\n          const requestOptions = {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"customer_id\": curr.customer_id })\n          }\n          await fetch(\"/api/remove_customer\", requestOptions)\n        }\n        remove_Data()\n        return false\n      }\n    })\n    setRows(filter)\n    setSelected([])\n  };\n\n  const handleEdit = (event) => {\n\n    const beforeEdit = getCurrentData()\n\n    let id = document.getElementById(\"editingId\").value || beforeEdit.customer_id\n    let name = document.getElementById(\"editingName\").value || beforeEdit.customer_name\n    let phone = document.getElementById(\"editingPhone\").value || beforeEdit.customer_phone\n\n    async function updateData() {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          \"customer_id\": id,\n          \"customer_name\": name,\n          \"customer_phone\": phone\n        })\n      }\n      await fetch(\"/api/update_customer\", requestOptions)\n    }\n    updateData()\n  }\n\n\n\n  const getCurrentData = () => {\n\n    if (selected.length != 1) {\n      return\n    }\n    for (let i = 0; i < rows.length; i++) {\n      if (rows[i].customer_id == selected[0]) {\n        return rows[i]\n      }\n    }\n  };\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Fragment>\n          <Typography\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n            }}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {numSelected} selected\n          </Typography>\n          <div>\n            {numSelected == 1 &&\n              <CustomerEditForm\n                onSubmit={handleEdit}\n                dataFromParent={getCurrentData()}\n              />}\n            <Tooltip title=\"Delete\">\n              <IconButton onClick={handleDelete}>\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Typography\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n            }}\n            variant=\"h4\"\n            id=\"tableTitle\"\n            component=\"div\"\n          >\n            Customers\n          </Typography>\n          <Tooltip title=\"Filter list\">\n            <IconButton>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar\n    >\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function CustomerTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"customer_id\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const loadedRef = React.useRef(0)\n\n  //insert values\n  const [name, setName] = React.useState(\"\");\n  const [phone, setPhone] = React.useState(\"\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.customer_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n  const handleName = (event) => {\n    setName(event.target.value)\n  };\n\n  const handlePhone = (event) => {\n    setPhone(event.target.value)\n  };\n\n  const handleSubmit = (event) => {\n    console.log(name, phone)\n    event.preventDefault()\n  \n\n    async function addData() \n    {\n    \n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ customer_name: name, customer_phone: phone })\n      }\n      await fetch(\"/api/add_customer\", requestOptions)\n    }\n    addData()\n    refreshPage()\n\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  React.useEffect(() => {\n    async function getData() {\n      let data = await fetch(\"/api/get_customers\")\n      data = await data.json()\n      if (!data.error) {\n        setRows(data)\n      }\n    }\n    getData()\n  }, []);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [rowsPerPage]);\n\n  React.useEffect(() => {\n    setItems(getItems())\n    // if (loadedRef.current == 1) {\n    //   setLoaded(true)\n    // }\n    // else if (loadedRef.current > 1) {\n    //   console.log(Math.floor((rows.length - 1) / rowsPerPage))\n    //   setPage(Math.floor((rows.length - 1) / rowsPerPage))\n    //   setLoaded(true)\n    // }\n  }, [rows]);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [page]);\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected} />\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n\n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                const isItemSelected = isSelected(row.customer_id);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hoverT\n                    onClick={(event) => handleClick(event, row.customer_id)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.customer_id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          \"aria-labelledby\": labelId\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell\n                      component=\"th\"\n                      id={labelId}\n                      scope=\"row\"\n                      padding=\"none\"\n                      align=\"center\"\n                    >\n                      {row.customer_id}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.customer_name}</TableCell>\n                    <TableCell align=\"center\">{row.customer_phone}</TableCell>\n                  </TableRow>\n                );\n              })}\n              {/*Add Element Row*/}\n              <TableRow\n                hoverT\n              >\n                <TableCell>\n                  <IconButton className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                    <AddBoxIcon />\n                  </IconButton>\n                </TableCell>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"none\"\n                  align=\"center\"\n                >\n                  {getNextId(rows)}\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TextField onChange={handleName} />\n                </TableCell>\n                <TableCell align=\"center\">\n                  <PhoneField onChange={handlePhone} />\n                </TableCell>\n              </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}\nexport { createData }","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FocusTrap from 'focus-trap-react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport EditIcon from '@mui/icons-material/Edit';\n\nconst TriggerButton = ({ buttonRef, showModal }) => {\n  return (\n    <Tooltip title=\"Edit\">\n      <IconButton\n        className=\"btn btn-lg btn-danger center modal-button\"\n        ref={buttonRef}\n        onClick={showModal}>\n        <EditIcon />\n      </IconButton>\n    </Tooltip>\n\n  );\n};\n\nconst EditForm = ({ onSubmit, dataFromParent }) => {\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          '& > :not(style)': { m: 1 },\n        }}\n      >\n        <TextField\n          helperText=\"Edit the number of seats\"\n          id=\"editingNumSeat\"\n          label={dataFromParent.num_seat}\n        />\n        <TextField\n          helperText=\"Edit the table feature ID\"\n          id=\"editingFeatureId\"\n          label={dataFromParent.feature_id}\n        />\n      </Box>\n      <Button\n        style={{ \n          left: '50%',\n          transform: \"translate(-50%, 0)\" \n        }}\n        variant=\"outlined\"\n        type=\"submit\">\n        Submit\n      </Button>\n      <input type=\"hidden\" id=\"editingTableId\" name=\"editingTableId\" \n      value={dataFromParent.table_id}></input>\n    </form>\n  );\n};\n\nconst DiningTableModel = ({\n  onClickOutside,\n  onKeyDown,\n  modalRef,\n  buttonRef,\n  closeModal,\n  onSubmit,\n  dataFromParent\n}) => {\n  return ReactDOM.createPortal(\n    <FocusTrap>\n      <aside\n        tag=\"aside\"\n        role=\"dialog\"\n        tabIndex=\"-1\"\n        aria-modal=\"true\"\n        className=\"modal-cover\"\n        onClick={onClickOutside}\n        onKeyDown={onKeyDown}\n      >\n        <div className=\"modal-area\" ref={modalRef}>\n          <button\n            ref={buttonRef}\n            aria-label=\"Close Modal\"\n            aria-labelledby=\"close-modal\"\n            className=\"_modal-close\"\n            onClick={closeModal}\n          >\n            <span id=\"close-modal\" className=\"_hide-visual\">\n              Close\n            </span>\n            <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\n              <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n            </svg>\n          </button>\n          <div className=\"modal-body\">\n            <EditForm \n            onSubmit={onSubmit}\n            dataFromParent={dataFromParent}/>\n          </div>\n        </div>\n      </aside>\n    </FocusTrap>,\n    document.body\n  );\n};\n\n\nclass DiningTableEditForm extends Component {\n  state = { isShown: false };\n  showModal = () => {\n    this.setState({ isShown: true }, () => {\n      this.closeButton.focus();\n    });\n    this.toggleScrollLock();\n  };\n  closeModal = () => {\n    this.setState({ isShown: false });\n    this.TriggerButton.focus();\n    this.toggleScrollLock();\n  };\n  onKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n  onClickOutside = (event) => {\n    if (this.modal && this.modal.contains(event.target)) return;\n    this.closeModal();\n  };\n\n  toggleScrollLock = () => {\n    document.querySelector('html').classList.toggle('scroll-lock');\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <TriggerButton\n          showModal={this.showModal}\n          buttonRef={(n) => (this.TriggerButton = n)}\n        />\n        {this.state.isShown ? (\n          <DiningTableModel\n            onSubmit={this.props.onSubmit}\n            modalRef={(n) => (this.modal = n)}\n            buttonRef={(n) => (this.closeButton = n)}\n            closeModal={this.closeModal}\n            onKeyDown={this.onKeyDown}\n            onClickOutside={this.onClickOutside}\n            dataFromParent={this.props.dataFromParent}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DiningTableEditForm;","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\nimport LinearProgress from '@mui/material/LinearProgress';\nimport DiningTableEditForm from \"../Component/EditForms/DiningTableEditForm.js\"\n\nfunction refreshPage() {\n  window.location.reload();\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"table_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Table Number\"\n  },\n  {\n    id: \"num_seat\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Number of Seats\"\n  },\n  {\n    id: \"feature_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Feature ID\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const {\n    numSelected,\n    rows,\n    selected,\n    setRows,\n    setSelected\n  } = props;\n  const handleDelete = (event) => {\n    let filter = rows.filter((curr) => {\n      if (!selected.includes(curr.table_id)) {\n        return true\n      }\n    }\n    )\n    setRows(filter)\n    setSelected([])\n  };\n\n  const handleEdit = (event) => {\n\n    const beforeEdit = getCurrentData()\n    let tableId = document.getElementById(\"editingTableId\").value || beforeEdit.table_id\n    let numSeat = document.getElementById(\"editingNumSeat\").value || beforeEdit.num_seat\n    let featureId = document.getElementById(\"editingFeatureId\").value || beforeEdit.feature_id\n\n    async function updateData() {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          \"table_id\": tableId,\n          \"num_seat\": numSeat,\n          \"feature_id\": featureId\n        })\n      }\n      console.log(requestOptions)\n      await fetch(\"/api/update_diningtable\", requestOptions)\n    }\n    updateData()\n  }\n\n\n  const getCurrentData = () => {\n\n    if (selected.length != 1) {\n      return\n    }\n    for (let i = 0; i < rows.length; i++) {\n      if (rows[i].table_id == selected[0]) {\n        return rows[i]\n      }\n    }\n  }\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Fragment>\n          <Typography\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n            }}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {numSelected} selected\n          </Typography>\n          <div>\n            {numSelected == 1 &&\n              <DiningTableEditForm\n                onSubmit={handleEdit}\n                dataFromParent={getCurrentData()}\n              />}\n            <Tooltip title=\"Delete\">\n              <IconButton onClick={handleDelete}>\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Typography\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n            }}\n            variant=\"h4\"\n            id=\"tableTitle\"\n            component=\"div\"\n          >\n            Dining Tables\n          </Typography>\n          <Tooltip title=\"Filter list\">\n            <IconButton>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const loadRef = React.useRef(0)\n\n  //insert values\n  const [num_seat, setSeats] = React.useState(0);\n  const [feature_id, setFeats] = React.useState(2);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.table_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n  const handleSeats = (event) => {\n    setSeats(event.target.value)\n  };\n\n  const handleFeats = (event) => {\n    setFeats(5)\n  };\n\n  const handleSubmit = (event) => {\n    async function postData() {\n      let post = await fetch(\n        \"/api/add_diningtable\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          feature_id: feature_id,\n          num_seat: num_seat\n        })\n      })\n      post = await post.json()\n      if (post.output == true) {\n        loadRef.current = loadRef.current + 1\n        refreshPage()\n      }\n    }\n    postData()\n\n  }\n\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  async function getData() {\n    let data = await fetch(\"/api/get_diningtables\")\n    data = await data.json()\n    if (!data.error) {\n      loadRef.current = loadRef.current + 1\n      setRows(data)\n    }\n  }\n  React.useEffect(() => {\n    getData()\n\n  }, []);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [rowsPerPage]);\n\n\n  React.useEffect(() => {\n    setItems(getItems())\n    if (loadRef.current == 1) {\n      setLoaded(true)\n    }\n    else if (loadRef.current > 1) {\n      setPage(Math.floor(rows.length / rowsPerPage))\n      loadRef.current = true\n      setLoaded(true)\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [page]);\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected} />\n        {loaded ? <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n\n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                 rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                const isItemSelected = isSelected(row.table_id);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hoverT\n                    onClick={(event) => handleClick(event, row.table_id)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.table_id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          \"aria-labelledby\": labelId\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell\n                      component=\"th\"\n                      id={labelId}\n                      scope=\"row\"\n                      padding=\"none\"\n                      align=\"center\"\n                    >\n                      {row.table_id}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.num_seat}</TableCell>\n                    <TableCell align=\"center\">{row.feature_id}</TableCell>\n                  </TableRow>\n                );\n              })}\n              {/*Add Element Row*/}\n              <TableRow\n                hoverT\n              >\n                <TableCell>\n                  <IconButton className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                    <AddBoxIcon />\n                  </IconButton>\n                </TableCell>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"none\"\n                  align=\"center\"\n                >\n                  ID\n                </TableCell>\n                <TableCell align=\"center\">\n                  <NumericField onChange={handleSeats} />\n                </TableCell>\n                <TableCell align=\"center\">\n                  {/* <TextField onChange={handleFeats}/> */}\n                  \n                  2\n                </TableCell>\n              </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer> : <LinearProgress />}\n\n\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n};","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FocusTrap from 'focus-trap-react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport NumericField from '../Numeric';\n\n// Edit Form\n\nconst TriggerButton = ({ buttonRef, showModal }) => {\n  return (\n    <Tooltip title=\"Edit\">\n      <IconButton\n        className=\"btn btn-lg btn-danger center modal-button\"\n        ref={buttonRef}\n        onClick={showModal}>\n        <EditIcon />\n      </IconButton>\n    </Tooltip>\n\n  );\n};\n\nconst EditForm = ({ onSubmit, dataFromParent }) => {\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          '& > :not(style)': { m: 1 },\n        }}\n      >\n        <TextField\n          helperText=\"Edit Waiter Name\"\n          id=\"editingName\"\n          defaultValue={dataFromParent.waiter_name}\n        />\n      </Box>\n      <Button\n        style={{ \n          left: '50%',\n          transform: \"translate(-50%, 0)\" \n        }}\n        variant=\"outlined\"\n        type=\"submit\">\n        Submit\n      </Button>\n      <input type=\"hidden\" id=\"editingId\" name=\"editingId\" \n      value={dataFromParent.waiter_id}></input>\n    </form>\n  );\n};\n\nconst CustomerModal = ({\n  onClickOutside,\n  onKeyDown,\n  modalRef,\n  buttonRef,\n  closeModal,\n  onSubmit,\n  dataFromParent\n}) => {\n  return ReactDOM.createPortal(\n    <FocusTrap>\n      <aside\n        tag=\"aside\"\n        role=\"dialog\"\n        tabIndex=\"-1\"\n        aria-modal=\"true\"\n        className=\"modal-cover\"\n        onClick={onClickOutside}\n        onKeyDown={onKeyDown}\n      >\n        <div className=\"modal-area\" ref={modalRef}>\n          <button\n            ref={buttonRef}\n            aria-label=\"Close Modal\"\n            aria-labelledby=\"close-modal\"\n            className=\"_modal-close\"\n            onClick={closeModal}\n          >\n            <span id=\"close-modal\" className=\"_hide-visual\">\n              Close\n            </span>\n            <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\n              <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n            </svg>\n          </button>\n          <div className=\"modal-body\">\n            <EditForm \n            onSubmit={onSubmit}\n            dataFromParent={dataFromParent}/>\n          </div>\n        </div>\n      </aside>\n    </FocusTrap>,\n    document.body\n  );\n};\n\n\nexport class WaitListEditForm extends Component {\n  state = { isShown: false };\n  showModal = () => {\n    this.setState({ isShown: true }, () => {\n      this.closeButton.focus();\n    });\n    this.toggleScrollLock();\n  };\n  closeModal = () => {\n    this.setState({ isShown: false });\n    this.TriggerButton.focus();\n    this.toggleScrollLock();\n  };\n  onKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n  onClickOutside = (event) => {\n    if (this.modal && this.modal.contains(event.target)) return;\n    this.closeModal();\n  };\n\n  toggleScrollLock = () => {\n    document.querySelector('html').classList.toggle('scroll-lock');\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <TriggerButton\n          showModal={this.showModal}\n          buttonRef={(n) => (this.TriggerButton = n)}\n        />\n        {this.state.isShown ? (\n          <CustomerModal\n            onSubmit={this.props.onSubmit}\n            modalRef={(n) => (this.modal = n)}\n            buttonRef={(n) => (this.closeButton = n)}\n            closeModal={this.closeModal}\n            onKeyDown={this.onKeyDown}\n            onClickOutside={this.onClickOutside}\n            dataFromParent={this.props.dataFromParent}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WaitListEditForm;","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport LinearProgress from '@mui/material/LinearProgress';\nimport WaiterEditForm from \"../Component/EditForms/WaiterEditForm\";\n\n \nfunction createData(waiter_id, waiter_name) {\n  return {\n    waiter_id, \n    waiter_name, \n  };\n}\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\nconst headCells = [\n  {\n    id: \"waiter_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Waiter Number\"\n  },\n  {\n    id: \"waiter_name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Name\"\n  }\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n\n  const \n  { \n    numSelected,\n    selected,\n    rows,setRows,\n    setSelected \n  } = props;\n\n\n\n  const getCurrentData = () => {\n\n    if (selected.length != 1) {\n      return\n    }\n    for (let i=0; i<rows.length; i++) {\n      if (rows[i].waiter_id== selected[0]) {\n        return rows[i]\n      }\n    }\n  };\n\n  const handleDelete = (event) => {\n    let filter = rows.filter((curr) => {\n      if (!selected.includes(curr.waiter_id)) {\n        return true\n      } else {\n        async function remove_Data() {\n          const requestOptions = {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"waiter_id\": curr.waiter_id })\n          }\n          let data=await fetch(\"/api/remove_waiter\", requestOptions)\n          \n          data=data.json()\n          console.log(data)\n        }\n        remove_Data()\n        return false\n      }\n    })\n    setRows(filter)\n    setSelected([])\n  };\n  const handleEdit = (event) => {\n\n    const beforeEdit = getCurrentData()\n\n    let id = document.getElementById(\"editingId\").value\n    let name = document.getElementById(\"editingName\").value || beforeEdit.name\n\n    if (beforeEdit.waiter_id == id) {\n\n      async function updateData() {\n\n        const requestOptions = {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ \n            \"waiter_id\": id,\n            \"waiter_name\": name, \n        })}\n        console.log(\"test\")\n      \n        await fetch(\"/api/update_waiter\", requestOptions)\n      }\n      updateData()\n    }\n\n    \n  };\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n         <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n          <div>\n          {numSelected == 1 && \n            <WaiterEditForm \n              onSubmit={handleEdit}\n              dataFromParent={getCurrentData()}\n              />}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n       </Fragment>\n      ) : (\n        <Fragment>\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h4\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Waiters\n        </Typography>\n          <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [loaded, setLoaded] = React.useState(0);\n  const loadedRef=React.useRef(0)\n\n\n  //insert values\n  const [name, setName] = React.useState(\"\");\n  \n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.waiter_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n\n   const handleWaiterName= (event) => {\n    setName(event.target.value)\n   };\n\n\n   const handleSubmit= (event) => {\n    console.log(name,\"we need to submit this to db\")\n    async function postData(){\n      let post= await fetch(\n        \"/api/add_waiter\",{\n          method:'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body:JSON.stringify({\n            name:name\n            })\n        })\n        post=await post.json()\n        console.log(\"Customer Insert\",post)\n        if (post.output==true){\n          loadedRef.current=loadedRef.current+1\n          get_Data()\n        }\n\n    }\n    postData()\n   };\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    async function get_Data(){\n      let data=await fetch(\"/api/get_waiters\")\n      data=await data.json()\n      if(!data.error){\n        loadedRef.current=loadedRef.current+1\n        setRows(data)\n      }\n    }\n    React.useEffect(() => {\n      get_Data()\n    },[]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n      if(loadedRef.current==1){\n        setLoaded(true)\n      }\n      else if(loadedRef.current>1){\n        setPage(Math.floor((rows.length-1)/rowsPerPage))\n\n        setLoaded(true)\n      }\n    },[rows]);\n    \n    React.useEffect(() => {\n      setItems(getItems())\n    },[page]);\n\n  \n\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        {loaded ? <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.waiter_id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.waiter_id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.waiter_id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.waiter_id}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.waiter_name}</TableCell>\n                    </TableRow>\n\n                  );\n                })}\n                {/*Add Element Row*/}\n               <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      ID\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <TextField onChange={handleWaiterName}/> \n                      </TableCell>\n                    </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer> : <LinearProgress />}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}\nexport{createData}","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TimePicker from '@mui/lab/TimePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateAdapter from '@mui/lab/AdapterDateFns';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CurrencyTextField from '@kylebeikirch/material-ui-currency-textfield'\n\n\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\nconst headCells = [\n  {\n    id: \"visits_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Visits ID\"\n  },\n  {\n    id: \"table_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Table ID\"\n  },\n  {\n    id: \"customer_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Customer ID\"\n  },\n  {\n    id: \"waiter_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Waiter ID\"\n  },\n  {\n    id: \"numGuest\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Guest Count\"\n  },\n  {\n    id: \"timeStart\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Start Time\"\n  },\n  {\n    id: \"timeEnd\",\n    numeric: true,\n    disablePadding: false,\n    label: \"End Time\"\n  },\n  {\n    id: \"checkAmount\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Check Amount\"\n  },\n\n  {\n    id: \"tipsAmount\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Tips Amount\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const {\n    numSelected,\n    rows,\n    selected,\n    setRows,\n    setSelected\n  } = props;\n  const handleDelete = (event) => {\n\n    event.preventDefault()\n    // console.log(rows)\n    console.log(selected)\n    let filter = rows.filter((curr) => {\n      // console.log(\"curr\", curr)\n      if (!selected.includes(curr.visit_id)) {\n        return true\n      } else {\n        async function remove_Data() {\n          const requestOptions = {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"visit_id\": curr.visit_id })\n          }\n          // console.log(\"requestOptions\", requestOptions)\n          let data=await fetch(\"/api/remove_visit\", requestOptions)\n          data=await data.json()\n          console.log(data)\n\n          return false\n        }\n        remove_Data()\n      }\n    })\n    setRows(filter)\n    setSelected([])\n  }\n\n  return (\n    <Toolbar className=\"toolbar\"\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Fragment>\n          <Typography\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n            }}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {numSelected} selected\n          </Typography>\n          <div>\n            {numSelected == 1 && <Tooltip title=\"Edit\">\n              <IconButton>\n                <EditIcon />\n              </IconButton>\n            </Tooltip>}\n            <Tooltip title=\"Delete\">\n              <IconButton onClick={handleDelete}>\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Typography\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n            }}\n            variant=\"h4\"\n            id=\"tableTitle\"\n            component=\"div\"\n          >\n            Visits\n          </Typography>\n          <Tooltip title=\"Filter list\">\n            <IconButton>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        </Fragment>\n      )}\n\n    </Toolbar>\n\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [loaded, setLoaded] = React.useState([]);\n  let loadedRef = React.useRef(0)\n\n  const [customersNames, setCustomersNames] = React.useState([]);\n  const [waitersNames, setWaitersNames] = React.useState([]);\n  const [UTCStart, setUTCStart] = React.useState(new Date());\n  const [UTCEnd, setUTCEnd] = React.useState(new Date());\n  const [tablesList, setTablesList] = React.useState([]);\n\n  //insert values\n  const [numGuest, setNumGuest] = React.useState(0);\n  const [startTime, setStartTime] = React.useState(\"\");\n  const [endTime, setEndTime] = React.useState(\"\");\n  const [customerID, setCustomerID] = React.useState([]);\n  const [waiterID, setWaiterID] = React.useState([]);\n  const [check, setCheck] = React.useState(0);\n  const [tip, setTips] = React.useState(0);\n  const [tableID, setTable] = React.useState();\n\n\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.visit_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n\n  const handleCustomers = (event, newValue) => {\n    setCustomerID(newValue.id)\n  };\n\n\n  const handleWaiters = (event, newValue) => {\n    setWaiterID(newValue.id)\n  };\n\n  const handleTable = (event, newValue) => {\n    setTable(newValue.id)\n  };\n\n\n  const handleStartTime = (newValue) => {\n    setUTCStart(newValue)\n  };\n\n  const handleEndTime = (newValue) => {\n    setUTCEnd(newValue)\n  };\n\n\n  const handleNumGuest = (event) => {\n    setNumGuest(event.target.value)\n  };\n\n\n\n\n\n  const handleSubmit = (event) => {\n    console.log(customerID, waiterID, numGuest, startTime, endTime, check, tip, tableID)\n    async function postData() {\n      let post = await fetch(\n        \"/api/add_visit\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          customer_id: customerID,\n          waiter_id: waiterID,\n          num_guest: numGuest,\n          time_start: startTime,\n          time_stop: endTime,\n          check_amount: check,\n          tips_amount: tip,\n          table_id: tableID\n        })\n      })\n      post = await post.json()\n      console.log(\"Visit Insert\", post)\n      if (post.output == true) {\n        get_Data()\n      }\n\n    }\n    postData()\n\n  };\n\n\n  const handleCheck = (event) => {\n    setCheck(event.target.value)\n  };\n\n  const handleTip = (event) => {\n    setTips(event.target.value)\n  };\n\n\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  async function get_Data() {\n    let data = await fetch(\"/api/get_visits\")\n    data = await data.json()\n    // console.log(data)\n    if (!data.error) {\n      loadedRef.current = loadedRef.current + 1\n      setRows(data)\n    }\n\n\n    let data2 = await fetch(\"/api/get_customers\")\n    data2 = await data2.json()\n    if (!data2.error) {\n      setCustomersNames(data2)\n    }\n\n    let data3 = await fetch(\"/api/get_waiters\")\n    data3 = await data3.json()\n    if (!data3.error) {\n      setWaitersNames(data3)\n    }\n\n    let data4 = await fetch(\"/api/get_diningtables\")\n    data4 = await data4.json()\n    if (!data4.error) {\n\n      setTablesList(data4)\n    }\n\n\n  }\n\n  React.useEffect(() => {\n\n    get_Data()\n\n  }, []);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [rowsPerPage]);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [rows]);\n\n  React.useEffect(() => {\n    if (loadedRef.current == 1) {\n      setLoaded(true)\n    }\n    else if (loadedRef.current > 1) {\n      setPage(Math.floor((rows.length - 1) / rowsPerPage))\n      setLoaded(true)\n    }\n  }, [tablesList]);\n\n  React.useEffect(() => {\n    setItems(getItems())\n  }, [page]);\n\n  React.useEffect(() => {\n    setStartTime(UTCStart.getTime())\n  }, [UTCStart]);\n\n  React.useEffect(() => {\n    setEndTime(UTCEnd.getTime())\n  }, [UTCEnd]);\n\n\n\n\n\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected} />\n        {loaded ? <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n\n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                const isItemSelected = isSelected(row.visit_id);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hoverT\n                    onClick={(event) => handleClick(event, row.visit_id)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.visit_id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          \"aria-labelledby\": labelId\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell\n                      component=\"th\"\n                      id={labelId}\n                      scope=\"row\"\n                      padding=\"none\"\n                      align=\"center\"\n                    >\n                      {row.visit_id}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.table_id}</TableCell>\n                    <TableCell align=\"center\">{row.customer_id}</TableCell>\n                    <TableCell align=\"center\">{row.waiter_id}</TableCell>\n                    <TableCell align=\"center\">{row.num_guest}</TableCell>\n                    <TableCell align=\"center\">\n                      {new Date(row.time_start).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {new Date(row.time_stop).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.check_amount.toFixed(2)}</TableCell>\n                    <TableCell align=\"center\">{row.tips_amount.toFixed(2)}</TableCell>\n\n\n\n\n                  </TableRow>\n\n                );\n              })}\n              {/*Add Element Row*/}\n              <TableRow\n                hoverT\n              >\n                <TableCell>\n                  <IconButton className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                    <AddBoxIcon />\n                  </IconButton>\n                </TableCell>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"none\"\n                  align=\"center\"\n                >\n                  ID\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Autocomplete\n                    disablePortal\n                    id=\"combo-box\"\n                    onChange={handleTable}\n                    isOptionEqualToValue={(option, value) => option.value === value.value}\n                    options={\n                      tablesList.map((item, index) => {\n                        return { \"label\": item.table_id.toString(), \"id\": item.table_id }\n                      })\n                    }\n                    sx={{ width: 150 }}\n                    renderInput={(params) => <TextField {...params} label=\"Tables\" />}\n                  />\n\n\n\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Autocomplete\n                    disablePortal\n                    id=\"combo-box\"\n                    onChange={handleCustomers}\n                    isOptionEqualToValue={(option, value) => option.value === value.value}\n\n                    options={\n                      customersNames.map((item, index) => {\n                        return { \"label\": item.customer_name, \"id\": item.customer_id }\n                      })\n                    }\n                    sx={{ width: 150 }}\n                    renderInput={(params) => <TextField {...params} label=\"Customers\" />}\n                  />\n\n\n\n                </TableCell>\n                <TableCell align=\"center\">\n\n                  <Autocomplete\n                    disablePortal\n                    id=\"combo-box\"\n                    onChange={handleWaiters}\n                    isOptionEqualToValue={(option, value) => option.value === value.value}\n\n                    options={\n                      waitersNames.map((item, index) => {\n                        return { \"label\": item.waiter_name, \"id\": item.waiter_id }\n                      })\n                    }\n                    sx={{ width: 150 }}\n                    renderInput={(params) => <TextField {...params} label=\"Waiters\" />}\n                  />\n\n\n\n                </TableCell>\n                <TableCell align=\"center\">\n                  <NumericField onChange={handleNumGuest} />\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  <LocalizationProvider dateAdapter={DateAdapter}>\n                    <TimePicker\n                      label=\"Time\"\n                      value={UTCStart}\n                      onChange={handleStartTime}\n                      renderInput={(params) => <TextField {...params} />}\n                    />\n                  </LocalizationProvider>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <LocalizationProvider dateAdapter={DateAdapter}>\n                    <TimePicker\n                      label=\"Time\"\n                      value={UTCEnd}\n                      onChange={handleEndTime}\n                      renderInput={(params) => <TextField {...params} />}\n                    />\n                  </LocalizationProvider>\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  <CurrencyTextField\n                    label=\"Check\"\n                    variant=\"outlined\"\n                    value={check}\n                    currencySymbol=\"$\"\n                    minimumValue=\"0\"\n                    outputFormat=\"number\"\n                    decimalCharacter=\".\"\n                    digitGroupSeparator=\",\"\n                    onChange={handleCheck}\n                  />\n                </TableCell>\n                <TableCell align=\"center\">\n                  <CurrencyTextField\n                    label=\"Tips\"\n                    variant=\"outlined\"\n                    value={tip}\n                    currencySymbol=\"$\"\n                    minimumValue=\"0\"\n                    outputFormat=\"number\"\n                    decimalCharacter=\".\"\n                    digitGroupSeparator=\",\"\n                    onChange={handleTip}\n                    decimalPlaces=\"2\"\n                  />\n                </TableCell>\n\n\n\n              </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer> : <LinearProgress />}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}","\nimport { Fragment } from \"react\";\n\nfunction Home() {\n    return (\n        <Fragment>\n            \n            <h1>This is a home Page</h1>\n            <h1>Checkout Those Links</h1>\n        </Fragment>\n    )\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport {\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    textDecoration: \"none\",\n    color: \"blue\",\n    fontSize: \"20px\",\n  },\n  icon: {\n    color: \"white\"\n  }\n}));\n\nfunction DrawerComponent() {\n  const classes = useStyles();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <>\n      <Drawer\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/\" className={\"link\"}>Home</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/diningtables\" className={\"link\"}>Dining Tables</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/customers\" className={\"link\"}>Customers</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/waitlist\" className={\"link\"}>Waitlist</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/waiters\" className={\"link\"}>Waiters</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/visits\" className={\"link\"}>Visits</Link>\n            </ListItemText>\n          </ListItem>\n        </List>\n      </Drawer>\n      <IconButton onClick={() => setOpenDrawer(!openDrawer)}>\n        <MenuIcon />\n      </IconButton>\n    </>\n  );\n}\nexport default DrawerComponent;","import React from \"react\";\nimport {\n    AppBar,\n    Toolbar,\n    CssBaseline,\n    Typography,\n    makeStyles,\n    useTheme,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport DrawerComponent from \"./Drawer\";\n\nconst useStyles = makeStyles((theme) => ({\n    navlinks: {\n        marginLeft: theme.spacing(5),\n        display: \"flex\",\n    },\n    logo: {\n        flexGrow: \"1\",\n        cursor: \"pointer\",\n    },\n}));\n\nfunction MenuBar() {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n    return (\n        <AppBar position=\"static\">\n            <CssBaseline />\n            <Toolbar>\n                <Typography variant=\"h4\" className={classes.logo}>\n                    Restaurant Management System\n                </Typography>\n                {isMobile ? (\n                    <DrawerComponent />\n                ) : (\n\n\n                    <div className={classes.navlinks}>\n                        <Link to=\"/\" className={\"link\"}>\n                            Home\n                        </Link>\n                        <Link to=\"/diningtables\" className={\"link\"}>\n                            Dining Tables\n                        </Link>\n                        <Link to=\"/customers\" className={\"link\"}>\n                            Customers\n                        </Link>\n                        <Link to=\"/Waitlist\" className={\"link\"}>\n                            Waitlist\n                        </Link>\n                        <Link to=\"/Waiters\" className={\"link\"}>\n                            Waiters\n                        </Link>\n                        <Link to=\"/Visits\" className={\"link\"}>\n                            Visits\n                        </Link>\n                    </div>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n}\nexport default MenuBar;\n","import './style.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport Waitlist from \"./Pages/Waitlist\";\nimport Customers from './Pages/Customers';\nimport DiningTables from './Pages/DiningTables';\nimport Waiters from './Pages/Waiters';\nimport Visits from './Pages/Visits';\nimport Home from './Pages/Home';\nimport Menubar from './Component/Menubar';\n\nfunction App() {\n  return (\n    <Router>\n      <Menubar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/waitlist\" component={Waitlist} />\n        <Route path=\"/customers\" component={Customers} />\n        <Route path=\"/diningtables\" component={DiningTables} />\n        <Route path=\"/waiters\" component={Waiters} />\n        <Route path=\"/visits\" component={Visits} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}