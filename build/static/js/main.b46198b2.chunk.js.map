{"version":3,"sources":["Component/Numeric.js","Component/Phone.js","DatabaseTest.js","Pages/Customers.js","Pages/Waitlist.js","Pages/DiningTables.js","Pages/Waiters.js","Pages/Visits.js","Pages/Home.js","Component/Drawer.js","Component/Menubar.js","App.js","index.js"],"names":["NumericField","props","onChange","onKeyPress","max","Number","MAX_SAFE_INTEGER","min","onInput","TextField","type","inputProps","event","console","log","which","preventDefault","alert","value","parseInt","target","PhoneField","length","maxLength","customerData","waiterData","visitsData","createData","customer_id","name","phone","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","color","indeterminate","checked","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","rows","setRows","setSelected","Toolbar","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","Typography","display","alignItems","variant","className","Tooltip","title","IconButton","filter","curr","includes","CustomerTables","React","setOrder","setOrderBy","page","setPage","dense","rowsPerPage","setRowsPerPage","items","setItems","setName","feats","setPhone","getItems","slice","emptyRows","Math","fetch","data","json","error","get_Data","width","Paper","mb","TableContainer","Table","minWidth","size","newSelecteds","n","TableBody","row","isItemSelected","indexOf","isSelected","labelId","hoverT","selectedIndex","newSelected","concat","handleClick","role","tabIndex","scope","customer_name","customer_phone","fontSize","Phone","inputMode","style","height","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","queueID","customerID","numcustomer","time","request","seated","Date","toLocaleTimeString","hour","minute","DiningTables","customerNames","setCustomersNames","local","setLocal","setCustomerID","setTime","setSeated","seatCount","setSeatCount","setRequests","item","createCustomersName","getTime","Autocomplete","disablePortal","newValue","options","renderInput","params","Numeric","LocalizationProvider","dateAdapter","DateAdapter","TimePicker","FormControl","fullWidth","InputLabel","Select","MenuItem","table_id","seats","setSeats","setFeats","num_seat","feature_id","waiter_id","waiter_name","tableID","customerName","waiterName","numGuest","date","timeStart","timeStop","checkAmount","tipsAmount","totalAmount","customersNames","waitersNames","setWaitersNames","UTCStart","setUTCStart","UTCEnd","setUTCEnd","UTCDate","setNumGuest","startTime","setStartTime","endTime","setEndTime","waiterID","setWaiterID","check","setCheck","tips","setTips","total","setTotal","setDate","createCustomersNames","createWaitersNames","toLocaleDateString","DatePicker","inputFormat","Home","useStyles","makeStyles","link","textDecoration","icon","DrawerComponent","useState","openDrawer","setOpenDrawer","Drawer","open","onClose","List","ListItem","ListItemText","to","navlinks","marginLeft","spacing","logo","flexGrow","cursor","MenuBar","classes","useTheme","isMobile","useMediaQuery","breakpoints","down","AppBar","position","CssBaseline","App","Menubar","exact","path","Waitlist","Customers","Waiters","Visits","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b46198b2.chunk.js","sourcesContent":["import React from \"react\";\nimport { getDialogActionsUtilityClass, TextField } from \"@mui/material\";\n\nfunction NumericField(props) {\n    const{\n    onChange,\n    onKeyPress,\n    max=Number.MAX_SAFE_INTEGER,\n    min=0,\n    onInput\n    }=props\n \n    \n    // let onKeyPress=props.onKeypress||function(){}\n    // let onInput=props.onInput||function(){}\n    // let max=props.max||Number.MAX_SAFE_INTEGER \n    // let min=props.min||0\n    //handle inproper values \n    const handleKeyPress= (event) => {\n    console.log(event.which)\n    if(event.which != 8 && event.which != 13 && event.which != 0 && !(event.which >= 48 && event.which <= 57)){\n    event.preventDefault()\n    alert(\"Invalid input:Please Enter A number\")\n    }\n      };\n\n      const handleInput= (event) => {\n        let value=parseInt(event.target.value)\n        if (value!==value){\n            return\n        }\n        if(value<min){\n        alert(`Out of Range:${min}-${max}`)\n        event.target.value=min\n        return\n        }\n\n        if(value>max){\n            alert(\"Out of Range\")\n            event.target.value=max\n            return\n            }\n          };\n      \n      \n      \n\n    return (\n<TextField type=\"number\" inputProps={{ onKeyPress: handleKeyPress,onInput:handleInput }} onChange={onChange} max={max} min={min}></TextField>\n    );\n}\n\nexport default NumericField;\n","import React from \"react\";\nimport { getDialogActionsUtilityClass, TextField } from \"@mui/material\";\n\nfunction PhoneField(props) {\n    const{\n    onChange,\n    onKeyPress,\n    max=Number.MAX_SAFE_INTEGER,\n    min=0,\n    onInput\n    }=props\n  \n    \n    // let onKeyPress=props.onKeypress||function(){}\n    // let onInput=props.onInput||function(){}\n    // let max=props.max||Number.MAX_SAFE_INTEGER \n    // let min=props.min||0\n    //handle inproper values \n    const handleKeyPress= (event) => {\n    if(event.target.value.length==3||event.target.value.length==9){\n      if(event.which!=45){\n        event.preventDefault()\n        alert(\"Invalid input:Format 789-789-7777\")\n        }\n    }\n    else{\n\n      if(event.which != 8 && event.which != 13 && event.which != 0 && !(event.which >= 48 && event.which <= 57)){\n        event.preventDefault()\n        alert(\"Invalid input:Format 789-789-7777\")\n        }\n    }\n\n\n   \n      };\n\n      const handleInput= (event) => {\n        let value=parseInt(event.target.value)\n        if (value!==value){\n            return\n        }\n        if(value<min){\n        alert(\"Out of Range\")\n        event.target.value=min\n        return\n        }\n\n        if(value>max){\n            alert(\"Out of Range\")\n            event.target.value=max\n            return\n            }\n          };\n      \n      \n      \n\n    return (\n<TextField type=\"tel\" inputProps={{ onKeyPress: handleKeyPress,onInput:handleInput,maxLength: 12 }} onChange={onChange}></TextField>\n    );\n}\n\nexport default PhoneField;\n","\n\n\n\nlet customerData=   [\n    [1, \"Johny\", \"520-845-2015\"],\n    [2, \"Sue\", \"417-738-1242\"],\n    [3, \"Peggy\", \"478-979-3774\"],\n    [4, \"Ebenezer\", \"479-263-4320\"],\n    [5, \"Vicki\", \"806-650-3615\"],\n    [6, \"Greg\", \"623-374-6343\"],\n    [7, \"Mark\", \"202-475-1141\"],\n    [8, \"James\", \"203-223-9263\"],\n    [9, \"Dan\", \"209-728-6683\"],\n    [10, \"Brett\", \"206-358-3320\"],\n    [11, \"Taylor\", \"314-424-6572\"],\n    [12, \"Meg\", \"747-300-4403\"],\n    [13, \"Cory\", \"601-532-4257\"]\n  ]\n\n  let diningData=\n  [\n        [1, 2, \"N/A\"],\n        [2, 2, \"Ocean View\"],\n        [3, 4, \"N/A\"],\n        [4, 4, \"Ocean View\"],\n        [5, 6, \"N/A\"],\n        [6, 6, \"Wheelchair Accessible\"],\n        [7, 8, \"N/A\"],\n        [8, 8, \"Ocean View\"],\n        [9, 10, \"Wheelchair Accessible\"],\n        [10, 10, \"N/A\"],\n        [11, 12, \"N/A\"],\n        [12, 12, \"Ocean View\"],\n        [13, 16, \"Wheelchair Accessible\"]\n  ]\n\n  let waitlistData=\n    [\n        [1, 2, 8,1637283142820,\"No booth\",false],\n        [2, 2, 8,1637283142820,\"No booth\",false],\n        [3, 2, 8,1637283142820,\"No booth\",false],            \n        [4, 2, 8,1637283142820,\"No booth\",false],           \n        [5, 2, 8,1637283142820,\"No booth\",false],            \n        [7, 2, 8,1637283142820,\"No booth\",false],        \n        [8, 2, 8,1637283142820,\"No booth\",false],\n        [9, 2, 8,1637283142820,\"No booth\",false],\n        [10, 2, 8,1637283142820,\"No booth\",false],           \n        [11, 2, 8,1637283142820,\"No booth\",false],            \n        [1, 2, 8,1637283142820,\"No booth\",false],            \n        [12, 2, 8,1637283142820,\"No booth\",false],            \n        [13, 2, 8,1637283142820,\"No booth\",false]\n    ]\n\n    let waiterData=[\n      [1, \"John Smith\"],\n      [2, \"John Smith\"],\n      [3, \"John Smith\"],\n      [4, \"John Smith\"],\n      [5, \"John Smith\"],\n      [6, \"John Smith\"],\n      [7, \"John Smith\"],\n      [8, \"John Smith\"],\n      [9, \"John Smith\"],\n      [10, \"John Smith\"],\n      [11, \"John Smith\"],\n      [12, \"John Smith\"],\n    ]\n\n \n    let visitsData=[\n      [1, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],\n      [2, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],    \n      [3, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],  \n      [4, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],\n      [5, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],\n      [6, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],    \n      [7, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],  \n      [8, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],\n      [9, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],\n      [10, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],    \n      [11, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],  \n      [12, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],\n      [13, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],\n      [14, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],    \n      [15, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],  \n      [16, \"Charlie\",\"Wilson\",8,\"2021-10-31\",1637283142820,1637283145000,21.88,4.50,26.38],\n    ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n  export{customerData,waitlistData,diningData,waiterData,visitsData}\n\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\nimport PhoneField from \"../Component/Phone\";\n\nimport { customerData } from \"../DatabaseTest\";\nimport { Pages } from \"@material-ui/icons\";\n\nfunction createData(customer_id, name, phone) {\n  return {\n    customer_id,\n    name,\n    phone,\n  };\n}\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n//\"customer_id\": 1, \"name\": \"johhny customer\", \"phone\": \"888-888-8888\" \nconst headCells = [\n  {\n    id: \"customer_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Customer Number\"\n  },\n  {\n    id: \"customer_name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Name\"\n  },\n  {\n    id: \"customer_phone\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Phone Number\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const { numSelected } = props;\n  const { selected } = props;\n  const { rows} = props;\n  const { setRows } = props;\n  const { setSelected } = props;\n  const handleDelete = (event) => {\n    let filter=rows.filter((curr)=>{\n      if(!selected.includes(curr.customer_id)){\n        return true\n      }\n    }\n    )\n    setRows(filter)\n    setSelected([])\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          <h1 className=\"pageTitle\">Customers</h1>\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <div>\n          {numSelected==1 &&<Tooltip title=\"Edit\">\n            <IconButton>\n            <EditIcon />\n            </IconButton>\n          </Tooltip>}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )\n      }\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function CustomerTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n\n  //insert values\n  const [name, setName] = React.useState(\"\");\n  const [feats, setPhone] = React.useState(\"\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.customer_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n  const handleName= (event) => {\n   setName(event.target.value)\n  };\n\n  const handlePhone= (event) => {\n    setPhone(event.target.value)\n   };\n\n   const handleSubmit= (event) => {\n    console.log(feats,name,\"we need to submit this to db\")\n   };\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    React.useEffect(() => {\n      async function get_Data(){\n        console.log(\"test\")\n        let data=await fetch(\"/get_customers\")\n        console.log(data)\n        data=await data.json()\n        console.log(data)\n        if(!data.error){\n          setRows(data)\n        }\n      }\n      get_Data()\n\n    },[]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rows]);\n\n    React.useEffect(() => {\n        setItems(getItems())\n      },[page]);\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.customer_id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.customer_id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.customer_id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.customer_id}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.customer_name}</TableCell>\n                      <TableCell align=\"center\">{row.customer_phone}</TableCell>\n                    </TableRow>\n                  );\n                })}\n                {/*Add Element Row*/}\n               <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      {stableSort(rows, getComparator(order, orderBy)).length+1}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <TextField onChange={handleName}/> \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <PhoneField onChange={handlePhone} inputProps={{ inputMode: 'numeric', type: 'tel',  maxLength: 12 }}/>\n                      </TableCell>\n                    </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}\nexport {createData}","\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\nimport { Select } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { InputLabel } from \"@mui/material\";\nimport { FormControl } from \"@mui/material\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TimePicker from '@mui/lab/TimePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateAdapter from '@mui/lab/AdapterDateFns';\nimport  { createData as createCustomersName}  from \"./Customers\" ;\n\n\nimport {customerData,waiterData,visitsData} from \"../DatabaseTest\";\nfunction createData(queueID, customerID, numcustomer,time,request,seated) {\n  time=new Date(time).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})\n  return {\n    queueID, \n    customerID, \n    numcustomer,\n    time,\n    request,\n    seated\n  };\n}\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n//[{ \"queueid\": 1, \"customerid\": 1, \"numberseat\": 8, \"time\": \"8:30pm\", \"request\": \"null\", \"seated\": \"false\" }]\nconst headCells = [\n  {\n    id: \"queueID\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Queue Number\"\n  },\n  {\n    id: \"customerID\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Customer Number\"\n  },\n  {\n    id: \"seatCount\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Seat Count\"\n  },\n  {\n    id: \"time\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Time\"\n  },\n  {\n    id: \"request\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Request\"\n  },\n  {\n    id: \"seated\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Seated\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const { numSelected } = props;\n  const { selected } = props;\n  const { rows} = props;\n  const { setRows } = props;\n  const { setSelected } = props;\n  const handleDelete = (event) => {\n    let filter=rows.filter((curr)=>{\n      if(!selected.includes(curr.queueID)){\n        return true\n      }\n    }\n    )\n    setRows(filter)\n    setSelected([])\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          <h1 className=\"pageTitle\">Waitlist</h1>\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <div>\n          {numSelected==1 &&<Tooltip title=\"Edit\">\n            <IconButton>\n            <EditIcon />\n            </IconButton>\n          </Tooltip>}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )\n      }\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [customerNames, setCustomersNames] = React.useState([]);\n  const [local, setLocal] = React.useState(new Date());\n\n  //insert values\n  const [customerID, setCustomerID] = React.useState(0);\n  const [time, setTime] = React.useState(\"\");\n  const [seated, setSeated] = React.useState(\"\");\n  const [seatCount, setSeatCount] = React.useState(0);\n  const [request, setRequests] = React.useState(\"\");\n  \n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.queueID);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n  const convertUTC= (date) => {\n    if(date.getUTCMinutes()<10){\n      return  `${date.getUTCHours()}:0${date.getUTCMinutes()}`  \n    }\n    return  `${date.getUTCHours()}:${date.getUTCMinutes()}`  \n   };\n\n  const handleCustomers= (event,newValue) => {\n   setCustomerID(newValue.id)\n  };\n\n  const handleSeatsCount= (event) => {\n    setSeatCount(event.target.value)\n   };\n\n   const handleTime= (newValue) => {\n    setLocal(newValue)\n   };\n\n   const handleRequests= (event) => {\n    setRequests(event.target.value)\n   };\n\n   const handleSeated= (event) => {\n    setSeated(event.target.value)\n   };\n\n   const handleSubmit= (event) => {\n    console.log(seated,customerID,time,request,seatCount,\"we need to submit this to db\")\n   };\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n\n    React.useEffect(() => {\n      setRows(\n        visitsData.map((item,index)=>{\n          return createData(...item)\n  \n         })\n      )\n\n      setCustomersNames(customerData.map((item,index)=>{\n      return createCustomersName(...item)\n      }\n      \n      ))\n      // setTime(convertUTC(new Date()))\n\n    },[]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rows]);\n    \n    React.useEffect(() => {\n      setItems(getItems())\n    },[page]);\n\n    React.useEffect(() => {\n      setTime(local.getTime())\n    },[local]);\n\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.queueID);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.queueID)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.queueID}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.queueID}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.customerID}</TableCell>\n                      <TableCell align=\"center\">{row.numcustomer}</TableCell>\n                      <TableCell align=\"center\">{row.time}</TableCell>\n                      <TableCell align=\"center\">{row.request}</TableCell>\n                      <TableCell align=\"center\">{`${row.seated}`}</TableCell>\n\n\n                    </TableRow>\n\n                  );\n                })}\n                {/*Add Element Row*/}\n               <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      {stableSort(rows, getComparator(order, orderBy)).length+1}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Autocomplete\n                      disablePortal\n                 id=\"combo-box\"\n                 onChange={handleCustomers}\n                  options={\n                  customerNames.map((item,index)=>{\n                  return {\"label\":item.name,\"id\":item.customerID}\n                  })\n                  }\n                  sx={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Customers\" />}\n    />\n                      \n                      \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <NumericField onChange={handleSeatsCount}/>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <LocalizationProvider dateAdapter={DateAdapter}>\n                      <TimePicker\n                      label=\"Time\"\n                      value={local}\n                      onChange={handleTime}\n                      renderInput={(params) => <TextField {...params} />}\n                      />\n                      </LocalizationProvider>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <TextField onChange={handleRequests}/> \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <FormControl fullWidth>\n\n                      <InputLabel>Seated</InputLabel>\n\n                      <Select\n                 value={seated}\n             onChange={handleSeated}\n                >\n    <MenuItem value={'True'}>True</MenuItem>\n    <MenuItem value={'False'}>False</MenuItem>\n\n  </Select>\n  </FormControl>\n\n    \n                      </TableCell>\n                      \n\n                    </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\n\nimport { diningData } from \"../DatabaseTest\";\n\nfunction createData(table_id, num_seat, feature_id) {\n  return {\n    table_id,\n    num_seat,\n    feature_id,\n  };\n}\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"table_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Table Number\"\n  },\n  {\n    id: \"num_seat\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Number of Seats\"\n  },\n  {\n    id: \"feature_id\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Special Features\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const { numSelected } = props;\n  const { selected } = props;\n  const { rows} = props;\n  const { setRows } = props;\n  const { setSelected } = props;\n  const handleDelete = (event) => {\n    let filter=rows.filter((curr)=>{\n      if(!selected.includes(curr.table_id)){\n        return true\n      }\n    }\n    )\n    setRows(filter)\n    setSelected([])\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          <h1 className=\"pageTitle\">Dining Tables</h1>\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <div>\n          {numSelected==1 &&<Tooltip title=\"Edit\">\n            <IconButton>\n            <EditIcon />\n            </IconButton>\n          </Tooltip>}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )\n      }\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n\n  //insert values\n  const [seats, setSeats] = React.useState(0);\n  const [feats, setFeats] = React.useState(\"\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.table_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n  const handleSeats= (event) => {\n   setSeats(event.target.value)\n  };\n\n  const handleFeats= (event) => {\n    setFeats(event.target.value)\n   };\n\n   const handleSubmit= (event) => {\n    console.log(feats,seats,\"we need to submit this to db\")\n   };\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n\n    React.useEffect(() => {\n      async function get_Data(){\n        let data=await fetch(\"/get_diningtables\")\n        data=await data.json()\n        if(!data.error){\n          setRows(data)\n        }\n      }\n      get_Data()\n\n    },[]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rows]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[page]);\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.table_id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.table_id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.table_id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.table_id}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.num_seat}</TableCell>\n                      <TableCell align=\"center\">{row.feature_id}</TableCell>\n                    </TableRow>\n                  );\n                })}\n                {/*Add Element Row*/}\n               <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      {stableSort(rows, getComparator(order, orderBy)).length+1}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <NumericField onChange={handleSeats}/> \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <TextField onChange={handleFeats}/>\n                      </TableCell>\n                    </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}","\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\n\n\nimport {waiterData} from \"../DatabaseTest\";\nfunction createData(waiter_id, waiter_name) {\n  return {\n    waiter_id, \n    waiter_name, \n  };\n}\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\nconst headCells = [\n  {\n    id: \"waiter_id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Waiter Number\"\n  },\n  {\n    id: \"waiter_name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Name\"\n  }\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const { numSelected } = props;\n  const { selected } = props;\n  const { rows} = props;\n  const { setRows } = props;\n  const { setSelected } = props;\n  const handleDelete = (event) => {\n    let filter=rows.filter((curr)=>{\n      if(!selected.includes(curr.queueID)){\n        return true\n      }\n    }\n    )\n    setRows(filter)\n    setSelected([])\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          <h1 className=\"pageTitle\">Waiters</h1>\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <div>\n          {numSelected==1 &&<Tooltip title=\"Edit\">\n            <IconButton>\n            <EditIcon />\n            </IconButton>\n          </Tooltip>}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )\n      }\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const [names, setNames] = React.useState([]);\n\n\n  //insert values\n  const [customer, setCustomers] = React.useState(0);\n  const [time, setTime] = React.useState(\"\");\n  const [seated, setSeated] = React.useState(\"\");\n  const [seatCount, setSeatCount] = React.useState(\"\");\n  const [name, setName] = React.useState(\"\");\n  \n  const [local, setLocal] = React.useState(new Date());\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.queueID);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n\n   const handleName= (event) => {\n    setName(event.target.value)\n   };\n\n\n   const handleSubmit= (event) => {\n    console.log(name,\"we need to submit this to db\")\n   };\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n\n    React.useEffect(() => {\n      async function get_Data(){\n        let data=await fetch(\"/get_waiters\")\n        data=await data.json()\n        if(!data.error){\n          setRows(data)\n        }\n      }\n      get_Data()\n\n    },[]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rows]);\n    \n    React.useEffect(() => {\n      setItems(getItems())\n    },[page]);\n\n  \n\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.queueID);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.queueID)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.queueID}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.waiter_id}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.waiter_name}</TableCell>\n                    </TableRow>\n\n                  );\n                })}\n                {/*Add Element Row*/}\n               <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      {stableSort(rows, getComparator(order, orderBy)).length+1}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <TextField onChange={handleName}/> \n                      </TableCell>\n                    </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}\nexport{createData}\n","\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { TextField } from \"@mui/material\";\nimport NumericField from \"../Component/Numeric\";\nimport { Select } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { InputLabel } from \"@mui/material\";\nimport { FormControl } from \"@mui/material\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TimePicker from '@mui/lab/TimePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateAdapter from '@mui/lab/AdapterDateFns';\nimport  { createData as createCustomersNames  }  from \"./Customers\" ;\nimport  { createData as createWaitersNames }  from \"./Waiters\" ;\n\n\nimport {customerData,waiterData, visitsData} from \"../DatabaseTest\";\nimport { DatePicker } from \"@mui/lab\";\nimport { setDate } from \"date-fns\";\nfunction createData(tableID,customerName,waiterName,numGuest,date,timeStart,timeStop,checkAmount,tipsAmount,totalAmount) {\n    timeStart=new Date(timeStart).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})\n    timeStop=new Date(timeStop).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})\n    return {\n    tableID,\n    waiterName,\n    customerName,\n    numGuest,\n    date,\n    timeStart,\n    timeStop,\n    checkAmount,\n    tipsAmount,\n    totalAmount\n  };\n}\n\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\nconst headCells = [\n  {\n    id: \"tableID\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Table Number\"\n  },\n  {\n    id: \"customerName\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Customer Name\"\n  },\n  {\n    id: \"waiterName\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Waiter Name\"\n  },\n  {\n    id: \"numGuest\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Number of Guest\"\n  },\n  {\n    id: \"date\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Date\"\n  },\n  {\n    id: \"timeStart\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Start Time\"\n  },\n  {\n    id: \"timeEnd\",\n    numeric: true,\n    disablePadding: false,\n    label: \"End Time\"\n  },\n  {\n    id: \"checkAmount\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Check Amount\"\n  },\n\n  {\n    id: \"tipsAmount\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Tips Amount\"\n  },\n  {\n    id: \"totalAmount\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Total Amount\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              \"aria-label\": \"select all desserts\"\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const { numSelected } = props;\n  const { selected } = props;\n  const { rows} = props;\n  const { setRows } = props;\n  const { setSelected } = props;\n  const handleDelete = (event) => {\n    let filter=rows.filter((curr)=>{\n      if(!selected.includes(curr.queueID)){\n        return true\n      }\n    }\n    )\n    setRows(filter)\n    setSelected([])\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          <h1 className=\"pageTitle\">Visits</h1>\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <div>\n          {numSelected==1 &&<Tooltip title=\"Edit\">\n            <IconButton>\n            <EditIcon />\n            </IconButton>\n          </Tooltip>}\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )\n      }\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DiningTables() {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n\n  const [customersNames, setCustomersNames] = React.useState([]);\n  const [waitersNames, setWaitersNames] = React.useState([]);\n  const [UTCStart, setUTCStart] = React.useState(new Date());\n  const [UTCEnd, setUTCEnd] = React.useState(new Date());\n  const [UTCDate, setUTCDate] = React.useState(new Date());\n\n  //insert values\n  const [numGuest, setNumGuest] = React.useState(0);\n  const [startTime, setStartTime] = React.useState(\"\");\n  const [endTime, setEndTime] = React.useState(\"\");\n  const [customerID, setCustomerID] = React.useState([]);\n  const [waiterID, setWaiterID] = React.useState([]);\n  const [check, setCheck] = React.useState(0);\n  const [tips, setTips] = React.useState(0);\n  const [total, setTotal] = React.useState(0);\n  const [date, setDate] = React.useState(0);\n\n\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.queueID);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const getItems = (event) => {\n    return stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  };\n\n  const convertUTC= (date) => {\n    if(date.getUTCMinutes()<10){\n      return  `${date.getUTCHours()}:0${date.getUTCMinutes()}`  \n    }\n    return  `${date.getUTCHours()}:${date.getUTCMinutes()}`  \n   };\n\n  const handleCustomers= (event,newValue) => {\n   setCustomerID(newValue.id)\n  };\n\n\n  const handleWaiters= (event,newValue) => {\n    setWaiterID(newValue.id)\n   };\n\n\n   const handleStartTime= (newValue) => {\n    setUTCStart(newValue)\n   };\n\n   const handleEndTime= (newValue) => {\n    setUTCEnd(newValue)\n   };\n\n\n   const handleNumGuest= (event) => {\n    setNumGuest(event.target.value)\n   };\n\n\n\n\n\n   const handleSubmit= (event) => {\n    console.log(customerID,date,waiterID,numGuest,startTime,endTime,check,tips,total)\n   };\n\n   const handleDate= (newValue) => {\n    console.log(newValue)\n   };\n   const handleCheck= (event) => {\n    setCheck(event.target.value)\n   };\n\n   const handleTips= (event) => {\n    setTips(event.target.value)\n   };\n\n   const handleTotal= (event) => {\n    setTotal(event.target.value)\n   };\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n\n    React.useEffect(() => {\n      setRows(\n        visitsData.map((item,index)=>{\n          return createData(...item)\n  \n         })\n      )\n\n      setCustomersNames(customerData.map((item,index)=>{\n      return createCustomersNames(...item)\n      }  \n      \n      ))\n\n\n      setWaitersNames(waiterData.map((item,index)=>{\n        return createWaitersNames(...item)\n        }\n        \n        ))\n    \n\n    },[]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rowsPerPage]);\n\n    React.useEffect(() => {\n      setItems(getItems())\n    },[rows]);\n    \n    React.useEffect(() => {\n      setItems(getItems())\n    },[page]);\n\n    React.useEffect(() => {\n      setStartTime(UTCStart.getTime())\n    },[UTCStart]);\n\n    React.useEffect(() => {\n        setEndTime(UTCEnd.getTime())\n      },[UTCEnd]);\n\n \n\n    React.useEffect(() => {\n        setDate(UTCDate.toLocaleDateString('en-US'))\n      },[UTCDate]);\n\n\n  return (\n\n    <Box sx={{ width: \"100%\" }}>\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} rows={rows} setRows={setRows} setSelected={setSelected}/>\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            \n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                   rows.slice().sort(getComparator(order, orderBy)) */}\n              {items.map((row, index) => {\n                  const isItemSelected = isSelected(row.queueID);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hoverT\n                      onClick={(event) => handleClick(event, row.queueID)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.queueID}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            \"aria-labelledby\": labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.tableID}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.customerName}</TableCell>\n                      <TableCell align=\"center\">{row.waiterName}</TableCell>\n                      <TableCell align=\"center\">{row.numGuest}</TableCell>\n                      <TableCell align=\"center\">{row.date}</TableCell>\n                      <TableCell align=\"center\">{row.timeStart}</TableCell>\n                      <TableCell align=\"center\">{row.timeStop}</TableCell>\n                      <TableCell align=\"center\">{row.checkAmount}</TableCell>\n                      <TableCell align=\"center\">{row.tipsAmount}</TableCell>\n                      <TableCell align=\"center\">{row.totalAmount}</TableCell>\n\n\n\n\n\n                    </TableRow>\n\n                  );\n                })}\n                {/*Add Element Row*/}\n               <TableRow\n                      hoverT\n               >\n                     <TableCell>\n                       <IconButton  className=\"addIcon\" fontSize=\"large\" onClick={handleSubmit}>\n                       <AddBoxIcon/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                      {stableSort(rows, getComparator(order, orderBy)).length+1}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Autocomplete\n                      disablePortal\n                 id=\"combo-box\"\n                 onChange={handleCustomers}\n                  options={\n                  customersNames.map((item,index)=>{\n                  return {\"label\":item.name,\"id\":item.customerID}\n                  })\n                  }\n                  sx={{ width: 150 }}\n                renderInput={(params) => <TextField {...params} label=\"Customers\" />}\n    />\n    \n                      \n                      \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Autocomplete\n                      disablePortal\n                 id=\"combo-box\"\n                 onChange={handleWaiters}\n                  options={\n                  waitersNames.map((item,index)=>{\n                  return {\"label\":item.name,\"id\":item.waiterID}\n                  })\n                  }\n                  sx={{ width: 150 }}\n                renderInput={(params) => <TextField {...params} label=\"Waiters\" />}\n    />\n    \n                      \n                      \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <NumericField onChange={handleNumGuest}/>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <LocalizationProvider dateAdapter={DateAdapter}>\n                      <DatePicker\n                      label=\"Date\"\n                      value={UTCDate}\n                      inputFormat=\"MM/dd/yyyy\"\n                      onChange={handleDate}\n                      renderInput={(params) => <TextField {...params} />}\n                      />\n                      </LocalizationProvider>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <LocalizationProvider dateAdapter={DateAdapter}>\n                      <TimePicker\n                      label=\"Time\"\n                      value={UTCEnd}\n                      onChange={handleStartTime}\n                      renderInput={(params) => <TextField {...params} />}\n                      />\n                      </LocalizationProvider>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <LocalizationProvider dateAdapter={DateAdapter}>\n                      <TimePicker\n                      label=\"Time\"\n                      value={UTCStart}\n                      onChange={handleEndTime}\n                      renderInput={(params) => <TextField {...params} />}\n                      />\n                      </LocalizationProvider>\n                      </TableCell>\n                \n                      <TableCell align=\"center\">\n                      <NumericField onChange={handleCheck}/> \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <NumericField onChange={handleTips}/> \n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <NumericField onChange={handleTotal}/> \n                      </TableCell>\n                                    \n\n                    </TableRow>\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </Box>\n  );\n}\n// import Row from \"../Table/Row\";\n// import { useState } from \"react\";\n// import Switcher from \"../Switcher/Switcher\";\n// import { Fragment } from \"react\";\n// import Submitter from \"../Submitter/Submitter\";\n// import Filter from \"../Filter/Filter\";\n// function Visits() {\n\n//     //fetch table from backend, map each as seperate rows\n//     const [display, setDisplay] = useState(\"table\");\n//     let keys = [\"visit_id\", \"table_id\", \"customer_name\", \"waiter_name\", \"num_guest\", \"date\", \"time_start\", \"time_stop\", \"check_amount\", \"tips_amount\", \"total_amount\"];\n\n//     //change null and false and true to string on fetch?\n//     let temp = [{   \"visit_id\": 1, \n//                     \"table_id\": 49, \n//                     \"customer_name\": \"Charlie\", \n//                     \"waiter_name\": \"Wilson\", \n//                     \"num_guest\": 8, \n//                     \"date\": \"2021-10-31\", \n//                     \"time_start\": \"21:00:00\", \n//                     \"time_stop\": \"22:30:00\", \n//                     \"check_amount\": 21.88, \n//                     \"tips_amount\": 4.50,\n//                     \"total_amount\": 26.38}];\n\n//     return (\n//         <Fragment>\n//             <h1>Visits History</h1>\n//             <h2>Choose Action</h2>\n\n//             <Switcher setDisplay={setDisplay}>\n//             </Switcher >\n\n\n//             {display === \"table\" &&\n//                 <Fragment>\n//                     <h2>Filter</h2>\n//                     <Filter keys={keys} url=\"testurl\"></Filter>\n\n//                     <div className=\"flexTable\">\n//                         <div className=\"visitCell cell header\">Visit ID</div>\n//                         <div className=\"visitCell cell header\" >Table #</div>\n//                         <div className=\"visitCell cell header\" >Customer</div>\n//                         <div className=\"visitCell cell header\" >Waiter</div>\n//                         <div className=\"visitCell cell header\" ># Guests</div>\n//                         <div className=\"visitCell cell header\" >Date</div>\n//                         <div className=\"visitCell cell header\" >Start</div>\n//                         <div className=\"visitCell cell header\" >End</div>\n//                         <div className=\"visitCell cell header\" >Check</div>\n//                         <div className=\"visitCell cell header\" >Tips</div>\n//                         <div className=\"visitCell cell header\" >Total</div>\n//                         <div className=\"visitCell cell\"></div>\n//                         <div className=\"visitCell cell\"></div>\n//                         {temp.map((element, index) =>\n//                             <Row cellClass=\"visitCell\" data={element} keys={keys}></Row>\n//                         )}\n\n//                     </div>\n//                 </Fragment>\n\n//             }\n\n//             {display != \"table\" &&\n//                 <Submitter keys={keys} url=\"testurl\"></Submitter>\n//             }\n\n//         </Fragment>\n\n//     )\n\n// }\n\n// export default Visits;\n","\nimport { Fragment } from \"react\";\nfunction Home() {\n    return(\n\n\n<Fragment>\n<h1>This is a home Page</h1>\n<p></p>\n<h1>Checkout Those Links</h1>\n\n</Fragment>\n    )\n    \n  }\n  \n  export default Home;\n  ","import React, { useState } from \"react\";\nimport {\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n makeStyles\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(()=>({\n    link:{\n        textDecoration:\"none\",\n        color: \"blue\",\n        fontSize: \"20px\",\n    },\n    icon:{\n        color: \"white\"\n    }\n}));\n\nfunction DrawerComponent() {\nconst classes = useStyles();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <>\n      <Drawer\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n         <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/\" className={\"link\"}>Home</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/diningtables\" className={\"link\"}>Dining Tables</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/customers\" className={\"link\"}>Customers</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/waitlist\" className={\"link\"}>Waitlist</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/waiters\" className={\"link\"}>Waiters</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/visits\" className={\"link\"}>Visits</Link>\n            </ListItemText>\n          </ListItem>\n        </List>\n      </Drawer>\n      <IconButton onClick={() => setOpenDrawer(!openDrawer)}>\n        <MenuIcon />\n      </IconButton>\n    </>\n  );\n}\nexport default DrawerComponent;","import React from \"react\";\nimport {\n    AppBar,\n    Toolbar,\n    CssBaseline,\n    Typography,\n    makeStyles,\n    useTheme,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport DrawerComponent from \"./Drawer\";\n\nconst useStyles = makeStyles((theme) => ({\n    navlinks: {\n        marginLeft: theme.spacing(5),\n        display: \"flex\",\n    },\n    logo: {\n        flexGrow: \"1\",\n        cursor: \"pointer\",\n    },\n}));\n\nfunction MenuBar() {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n    return (\n        <AppBar position=\"static\">\n            <CssBaseline />\n            <Toolbar>\n                <Typography variant=\"h4\" className={classes.logo}>\n                    Restaurant Management System\n                </Typography>\n                {isMobile ? (\n                    <DrawerComponent />\n                ) : (\n\n\n                    <div className={classes.navlinks}>\n                        <Link to=\"/\" className={\"link\"}>\n                            Home\n                        </Link>\n                        <Link to=\"/diningtables\" className={\"link\"}>\n                            Tables\n                        </Link>\n                        <Link to=\"/customers\" className={\"link\"}>\n                            Customers\n                        </Link>\n                        <Link to=\"/Waitlist\" className={\"link\"}>\n                            Waitlist\n                        </Link>\n                        <Link to=\"/Waiters\" className={\"link\"}>\n                            Waiters\n                        </Link>\n                        <Link to=\"/Visits\" className={\"link\"}>\n                            Visits\n                        </Link>\n                    </div>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n}\nexport default MenuBar;\n","import './style.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Waitlist from \"./Pages/Waitlist\";\nimport Customers from './Pages/Customers';\nimport DiningTables from './Pages/DiningTables';\nimport Waiters from './Pages/Waiters';\nimport Visits from './Pages/Visits';\nimport Home from './Pages/Home';\nimport Menubar from './Component/Menubar';\n\nfunction App() {\n  return (\n    <Router>\n      <Menubar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/waitlist\" component={Waitlist} />\n        <Route path=\"/customers\" component={Customers} />\n        <Route path=\"/diningtables\" component={DiningTables} />\n        <Route path=\"/waiters\" component={Waiters} />\n        <Route path=\"/visits\" component={Visits} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}